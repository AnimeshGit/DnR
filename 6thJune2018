diff --git a/Constants/constant.js b/Constants/constant.js
index fdd2275..e3b9801 100644
--- a/Constants/constant.js
+++ b/Constants/constant.js
@@ -6,7 +6,13 @@
 'use strict';
 
 var keys = {
-	'baseUrl':'http://localhost:5050/',
+	'aws': {
+		'region'  : 'us-east-1',
+		'accessKeyId'	  : 'AKIAIRQLE6DKJIHFX56Q',
+		'secretAccessKey'  : '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',
+		'apiVersion' : '2012-10-08'
+	},
+	'baseUrl':'http://node.bizmoapps.com:5051/',
 	'ASSETS':'baseUrl/assets/',
 	'contactEmail': 'aniket.meshram@eeshana.com',
 	'imageUrl':'uploads/'
diff --git a/app.js b/app.js
index dbf40a3..e28a5aa 100644
--- a/app.js
+++ b/app.js
@@ -6,14 +6,24 @@ var cookieParser = require('cookie-parser');
 var bodyParser = require('body-parser');
 global.appRoot = path.resolve(__dirname);
 
+// var AWS = require('aws-sdk');
 
+// // aws.config.loadFromPath('config.json');
+// AWS.config.update({
+//     region:'us-east-1',		
+//     accessKeyId	  : 'AKIAIRQLE6DKJIHFX56Q',
+//     secretAccessKey  : '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',
+//     apiVersion : '2012-10-08'
+// });
+
+// console.log('in...');
 var cors = require('cors')
 const session = require('express-session');
 var flash = require('connect-flash');
 var fetch = require('node-fetch');
 
 const mongoose = require('./libs/mongoose-connection')();
-
+process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0
 var app = express();
 app.use(cors());
 
@@ -76,7 +86,7 @@ global.globalConsTant = require('./Constants/constant');
 
 //Users_Apis
 var index = require('./routes/user/index');
-app.use('/index', index);
+app.use('/', index);
 
 var users = require('./routes/user/users');
 app.use('/users', users);
@@ -94,6 +104,12 @@ app.use('/admin_terms', admin_terms);
 var admin_packages = require('./routes/user/admin/packages');
 app.use('/admin_packages', admin_packages);
 
+var admin_privacy = require('./routes/user/admin/privacy');
+app.use('/admin_privacy', admin_privacy);
+
+var admin_templates = require('./routes/user/admin/templates');
+app.use('/admin_templates', admin_templates);
+
 // catch 404 and forward to error handler
 app.use(function(req, res, next) {
     var err = new Error('Not Found');
@@ -101,6 +117,10 @@ app.use(function(req, res, next) {
     next(err);
 });
 
+var stripe = require("stripe")(
+  "sk_test_Z5EXtf7uNhmn2Y8CLvptdrRN"
+);
+
 // error handler
 app.use(function(err, req, res, next) {
     // set locals, only providing error in development
diff --git a/bin/www b/bin/www
index 93116b1..8a776c5 100644
--- a/bin/www
+++ b/bin/www
@@ -12,14 +12,22 @@ var http = require('http');
  * Get port from environment and store in Express.
  */
 
-var port = normalizePort(process.env.PORT || '5050');
+var port = normalizePort(process.env.PORT || '5051');
 app.set('port', port);
 
 /**
  * Create HTTP server.
  */
+var options = {
+  rejectUnauthorized: false
+};
 
-var server = http.createServer(app);
+// subjectAltName          = '@alt_names_server'
+
+// [alt_names_server]
+// IP.1 = '104.236.14.154'
+
+var server = http.createServer(app,options);
 
 /**
  * Listen on provided port, on all network interfaces.
@@ -87,4 +95,5 @@ function onListening() {
     ? 'pipe ' + addr
     : 'port ' + addr.port;
   debug('Listening on ' + bind);
+  console.log("running");
 }
diff --git a/libs/config.js b/libs/config.js
index a2e717c..4261336 100644
--- a/libs/config.js
+++ b/libs/config.js
@@ -7,35 +7,7 @@ var Promise = require("promise");
 var nodemailer = require('nodemailer');
 var email = require("emailjs/email");
 
-/*
-function_name : encrypt
-description : It is used for encrypt field
-input_parameters :
-field(string) : any field which you want to encrypt
-response :
-field(string) : encrypted field
-*/
 
-// var encrypt = function(text) {
-//     var cipher = crypto.createCipher(algorithm, password);
-//     var crypted = cipher.update(text, 'utf8', 'hex');
-//     crypted += cipher.final('hex');
-//     return crypted;
-// }
-/*
-function_name : decrypt
-description : It is used for decrypt field
-input_parameters :
-field(string) : any encrypted field which you want to decrypt
-response :
-field(string) : plain text field
-*/
-// var decrypt = function(text) {
-//     var decipher = crypto.createDecipher(algorithm, password)
-//     var dec = decipher.update(text, 'hex', 'utf8')
-//     dec += decipher.final('utf8');
-//     return dec;
-// }
 /*
 function_name : sendEmail
 description : It is used for sending password in mail
@@ -69,10 +41,8 @@ var sendMail = function(useremail, text, subject) {
             });
         */
         var server = email.server.connect({
-            // user: "mspragso@gmail.com",
-            // password: "GrapeGoat@980",
             user: "postmaster@eeshana.com",
-            password: "BHS^&AHHAG6J8748JAKKA",
+            password: "Pun32San!ose11",
             host: "smtp.mailgun.org",
             ssl: true
         }, function(err, msg) {
@@ -104,8 +74,8 @@ var sendMsg = function(phoneNumber, text) {
         //var twillowToken = '2d60a7944b9c0ac2c5f4903d9fafbe5a';
         //form:+1 650-481-8273
 
-        var twillowSId = 'AC2823df0cb2d52d9f2d11a2bc379616b6';
-        var twillowToken = '5c936dba069b762f6b7e30bbac2f0c38';
+        // var twillowSId = 'AC2823df0cb2d52d9f2d11a2bc379616b6';
+        // var twillowToken = '5c936dba069b762f6b7e30bbac2f0c38';
         
         // if (phoneNumber.includes(+)==true) {
         //     var res = phoneNumber;
diff --git a/libs/dbConfig.js b/libs/dbConfig.js
index a4b244c..e529afd 100644
--- a/libs/dbConfig.js
+++ b/libs/dbConfig.js
@@ -1,9 +1,3 @@
 module.exports = {
-    // hosts: 'bizmoapps.com:27017',
-    // db: 'DatingAndRating',
-    // user: 'apatil',
-    // password: 'landscape@eeshana',
-    // mongoUrl: 'mongodb://bizmoapps.com:27017/OpinionPlus'
-    // mongoUrl: 'mongodb://eeshana:eeshana12390@bizmoapps.com:27017/OpinionPlus'
     mongoUrl: 'mongodb://127.0.0.1:27017/DatingAndRating'
 };
diff --git a/libs/stripe/cards.js b/libs/stripe/cards.js
index 0eac610..99608a1 100644
--- a/libs/stripe/cards.js
+++ b/libs/stripe/cards.js
@@ -18,7 +18,7 @@ If the card's owner has no default card, then the new card will become the defau
 if the owner already has a default then it will not change. To change the default, you should either update 
 the customer to have a new default_source or update the recipient to have a new default_card.
 */
-function create_card(customer_id,reqData,callback)
+module.exports.create_card = function(customer_id,reqData,callback)
 {
 	stripe.customers.createSource(
 	  customer_id,
@@ -98,8 +98,7 @@ If you delete the last remaining card on a recipient, then the default_card attr
 Note that for cards belonging to customers, you may want to prevent customers on paid subscriptions from 
 deleting all cards on file so that there is at least one default card for the next invoice payment attempt.
 */
-	
-function delete_card(customer_id,card_id,callback)
+module.exports.delete_card = function(customer_id,card_id,callback)
 {
 	stripe.customers.deleteCard(
 	  customer_id,
@@ -122,8 +121,7 @@ List all cards
 You can see a list of the cards belonging to a customer or recipient. Note that the 10 most recent sources are always available on the customer object. If you need more than those 10, 
 you can use this API method and the limit and starting_after parameters to page through additional cards.
 */
-	
-function list_cards(customer_id,callback)
+module.exports.list_cards = function(customer_id,callback)
 {
 	stripe.customers.listCards(customer_id, function(err, cards) {
 	  	if(err)
diff --git a/libs/stripe/customer.js b/libs/stripe/customer.js
index e45a7b8..4117a71 100644
--- a/libs/stripe/customer.js
+++ b/libs/stripe/customer.js
@@ -12,8 +12,8 @@ reqData = {
 }
 */
 
-function create_customer(reqData,callback)
-{
+module.exports.create_customer = function(reqData,callback) {
+
 	stripe.customers.create(reqData, function(err, customer) {
 	  	if(err){
       console.log("create_customer=>",err);
@@ -86,7 +86,7 @@ function delete_customer(customer_id,callback)
       }
 	  
 	  });
-});
+};
 //********************************************
 /*
 Returns a list of your customers.
diff --git a/libs/stripe/subscription.js b/libs/stripe/subscription.js
index 0764f95..9c070e0 100644
--- a/libs/stripe/subscription.js
+++ b/libs/stripe/subscription.js
@@ -30,8 +30,7 @@ reqData = {
   ]
 }
 */
-function create_subscription(reqData,callback)
-{
+module.exports.create_subscription = function(reqData,callback) {
 	stripe.subscriptions.create(reqData, function(err, subscription) {
 	    if(err)
 	  	{
@@ -49,7 +48,7 @@ function create_subscription(reqData,callback)
 Retrieve a subscription
 Retrieves the subscription with the given ID
 */
-function retrieve_subscription(subscription_id,callback)
+module.exports.retrieve_subscription = function(subscription_id,callback)
 {	
 	stripe.subscriptions.retrieve(
   	subscription_id,
diff --git a/message.json b/message.json
index 8ca3c30..835b5a8 100644
--- a/message.json
+++ b/message.json
@@ -2,44 +2,15 @@
 	"congo":"Congratulations!!!!!",
 	
 	"signup_success" : {
-		"signup_title":"DnR Registration",
-		"signup_body":"You have successfully registered for DnR account."
+		"signup_title": "Dating And Rating Registration",
+		"signup_body": "You have successfully registered for Dating And Rating account."
 	},
-	"login_success" : {
-		"login_title":"DnR Login",
-		"login_body":"You have successfully login for DnR account."
+	"delete_account" : {
+		"delete_title": "Dating And Rating Account Closed",
+		"delete_body": "Dating And Rating Account Closed"
 	},
-	"case_update_success" : {
-		"case_update_title":"New Case added successfully",
-		"case_update_body":"You have successfully submitted Case in DnR account. Your Case No."
-	},
-	"close_case":{
-		"close_case_title":"Case Closed",
-		"case1":"Your Case No.",
-		"case2":"has been Closed Now."
-	},
-	"op_rcv":{
-		"rcv_op_title":"Opinion Received",
-		"rcv_op_body":"You have received an opinion on your case no."
-	},
-	"op_given":{
-		"doc_op_title":"Opinion Delivered",
-		"doc_op_body":"Hello!! You recently give your opinion on case no."
-	},
-	"follow_ques_mail":{
-		"follow_ques_title":"Follow question received",
-		"follow_ques_title_submit":"Follow question submitted",
-		"follow_ques_body":"Hello!! You recently received a follow question on case no.",
-		"follow_ques_body_submit":"Hello!! You recently submitted a follow question on case no."
-	},
-	"follow_ans_mail":{
-		"follow_ans_title":"Follow answer received",
-		"follow_ans_title_submit":"Follow answer submitted",
-		"follow_ans_body":"Hello!! You recently received a follow answer on case no.",
-		"follow_ans_body_submit":"Hello!! You recently submitted a follow answer on case no."
-	},
-	"case_feedback":{
-		"case_feedback_title":"DnR Feedback",
-		"case_feedback_body":"Hello!! aala ka mail."
+	"rating" : {
+		"rating_title": "Dating And Rating",
+		"rating_body": "Someone rated you"
 	}
 }
\ No newline at end of file
diff --git a/models/dnr_dates.js b/models/dnr_dates.js
index 382206c..bbf7888 100644
--- a/models/dnr_dates.js
+++ b/models/dnr_dates.js
@@ -3,14 +3,14 @@ var Schema = mongoose.Schema;
 var plugin = require('mongoose-createdat-updatedat');
 
 var DateSchema = new Schema({
-    date_requester_id:{
+	date_requester_id:{
         type: mongoose.Schema.Types.ObjectId,
         ref: 'DnR_User'
-    },
-    date_receiver_id:{
+	},
+	date_receiver_id:{
         type: mongoose.Schema.Types.ObjectId,
         ref: 'DnR_User'
-    },
+	},
     request_send_date:{
         type: Date
     },
diff --git a/models/dnr_list.js b/models/dnr_list.js
index a0ef17f..34b800a 100644
--- a/models/dnr_list.js
+++ b/models/dnr_list.js
@@ -16,8 +16,8 @@ var ListItems = new Schema({
     interests: {
         type: [String]
     },
-    ratings: {
-        type: [String]
+    ratings:{
+        type:[String]
     }
 });
 
diff --git a/models/dnr_rating.js b/models/dnr_rating.js
index 05f4d98..471b662 100644
--- a/models/dnr_rating.js
+++ b/models/dnr_rating.js
@@ -3,32 +3,20 @@ var Schema = mongoose.Schema;
 var plugin = require('mongoose-createdat-updatedat');
 
 var RatingSchema = new Schema({
-   	rating_by:{
-        type: mongoose.Schema.Types.ObjectId,
-        ref: 'DnR_User'
+   	rated_by:{
+		type: mongoose.Schema.Types.ObjectId,
+		ref: 'DnR_User'
 	},
-	rating_to:{
-        type: mongoose.Schema.Types.ObjectId,
-        ref: 'DnR_User'
+	rated_to:{
+		type: mongoose.Schema.Types.ObjectId,
+		ref: 'DnR_User'
 	},
 	is_rated:{
-        type: Boolean,
-        default: false
+		type: Boolean,
+		default: false
 	},
-    ratings:{
-        Sense_of_Humar: Number, 
-        Good_listner: Number,
-        Good_kisser: Number,
-        Sense_of_fashion: Number,
-        Kindness: Number,
-        Generosity: Number,
-        Spontaneuos: Number,
-        Good_cook: Number,
-        Passionate: Number,
-        Manners: Number,
-        Intellectual: Number,
-        Compassion: Number
-    }
+	ratings	: Object
+});
     
 RatingSchema.plugin(plugin);
 module.exports = mongoose.model('DnR_Rating', RatingSchema);
\ No newline at end of file
diff --git a/models/dnr_token.js b/models/dnr_token.js
index dd27d4e..fdc94c1 100644
--- a/models/dnr_token.js
+++ b/models/dnr_token.js
@@ -1,5 +1,6 @@
 var mongoose = require('./../libs/mongoose-connection')();
 var Schema = mongoose.Schema;
+//var bcrypt = require('bcrypt');
 var plugin = require('mongoose-createdat-updatedat');
 
 // set up a mongoose model
diff --git a/models/dnr_users.js b/models/dnr_users.js
index 4ba19fc..f5cf3bf 100644
--- a/models/dnr_users.js
+++ b/models/dnr_users.js
@@ -21,11 +21,10 @@ var UserSchema = new Schema({
         type: String
     },
     date_of_birth: {
-        type: Date,
-        default: Date.now
+        type: Date
     },
     age: {
-        type: String
+        type: Number
     },
     show_age: {
         type: Boolean,
@@ -48,9 +47,17 @@ var UserSchema = new Schema({
     height: {
         type: Number
     },
+    show_height : {
+        type : Boolean,
+        default  :true
+    },
     weight: {
         type: Number
     },
+    show_weight : {
+        type : Boolean,
+        default  :true
+    },
     ethnicity: {
         type: String
     },
@@ -64,11 +71,15 @@ var UserSchema = new Schema({
     interest: {
         type: [String]
     },
+    rating: {
+        type: [String]
+    },
     location: {
         type: [Number]
     },
     unit_system: {
-        type: String
+        type: String,
+        default: 'Metrics'
     },
     searching_for: {
         type: [String]
@@ -111,7 +122,8 @@ var UserSchema = new Schema({
         ethnicity:[String],
         relationship_status:[String],
         searching_for:[String],
-        likes:[String]
+        likes:[String],
+        country:String
     },
     my_favorite_list: [{
         type: mongoose.Schema.Types.ObjectId,
@@ -131,6 +143,12 @@ var UserSchema = new Schema({
     },
     promocode:{
         type:String
+    },
+    stripe_customer_id : {
+        type:String
+    },
+    country :{
+        type : String
     }
 });
 
diff --git a/package-lock.json b/package-lock.json
index 718f24c..59c318a 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -23,15 +23,10 @@
       "resolved": "https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
       "integrity": "sha1-WYc/Nej89sc2HBAjkmHXbhU0i7I="
     },
-    "after": {
-      "version": "0.8.2",
-      "resolved": "https://registry.npmjs.org/after/-/after-0.8.2.tgz",
-      "integrity": "sha1-/ts5T58OAqqXaOcCvaI7UF+ufh8="
-    },
     "ajv": {
-      "version": "5.5.2",
-      "resolved": "https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz",
-      "integrity": "sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=",
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-5.3.0.tgz",
+      "integrity": "sha1-RBT/dKUIecII7l/cgm4ywwNUnto=",
       "requires": {
         "co": "4.6.0",
         "fast-deep-equal": "1.0.0",
@@ -39,72 +34,11 @@
         "json-schema-traverse": "0.3.1"
       }
     },
-    "ansi-align": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-2.0.0.tgz",
-      "integrity": "sha1-w2rsy6VjuJzrVW82kPCx2eNUf38=",
-      "dev": true,
-      "requires": {
-        "string-width": "2.1.1"
-      },
-      "dependencies": {
-        "ansi-regex": {
-          "version": "3.0.0",
-          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
-          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
-          "dev": true
-        },
-        "is-fullwidth-code-point": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
-          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
-          "dev": true
-        },
-        "string-width": {
-          "version": "2.1.1",
-          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
-          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
-          "dev": true,
-          "requires": {
-            "is-fullwidth-code-point": "2.0.0",
-            "strip-ansi": "4.0.0"
-          }
-        },
-        "strip-ansi": {
-          "version": "4.0.0",
-          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
-          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
-          "dev": true,
-          "requires": {
-            "ansi-regex": "3.0.0"
-          }
-        }
-      }
-    },
     "ansi-regex": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
       "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
     },
-    "ansi-styles": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.0.tgz",
-      "integrity": "sha512-NnSOmMEYtVR2JVMIGTzynRkkaxtiq1xnFBcdQD/DnNCYPoEPsVJhM98BDyaoNOQIi7p4okdi3E27eN7GQbsUug==",
-      "dev": true,
-      "requires": {
-        "color-convert": "1.9.1"
-      }
-    },
-    "anymatch": {
-      "version": "1.3.2",
-      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-1.3.2.tgz",
-      "integrity": "sha512-0XNayC8lTHQ2OI8aljNCN3sSx6hsr/1+rlcDAotXJR7C1oZZHCNsfpbKwMjRA3Uqb5tF1Rae2oloTr4xpq+WjA==",
-      "dev": true,
-      "requires": {
-        "micromatch": "2.3.11",
-        "normalize-path": "2.1.1"
-      }
-    },
     "append-field": {
       "version": "0.1.0",
       "resolved": "https://registry.npmjs.org/append-field/-/append-field-0.1.0.tgz",
@@ -124,21 +58,6 @@
         "readable-stream": "2.2.7"
       }
     },
-    "arr-diff": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",
-      "integrity": "sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=",
-      "dev": true,
-      "requires": {
-        "arr-flatten": "1.1.0"
-      }
-    },
-    "arr-flatten": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
-      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==",
-      "dev": true
-    },
     "array-flatten": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
@@ -149,17 +68,6 @@
       "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.2.tgz",
       "integrity": "sha1-X8w3OSB3VyPP1k1lxkvvU7+eum0="
     },
-    "array-unique": {
-      "version": "0.2.1",
-      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz",
-      "integrity": "sha1-odl8yvy8JiXMcPrc6zalDFiwGlM=",
-      "dev": true
-    },
-    "arraybuffer.slice": {
-      "version": "0.0.6",
-      "resolved": "https://registry.npmjs.org/arraybuffer.slice/-/arraybuffer.slice-0.0.6.tgz",
-      "integrity": "sha1-8zshWfBTKj8xB6JywMz70a0peco="
-    },
     "asap": {
       "version": "2.0.6",
       "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
@@ -183,17 +91,6 @@
         "lodash": "4.17.4"
       }
     },
-    "async-each": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.1.tgz",
-      "integrity": "sha1-GdOGodntxufByF04iu28xW0zYC0=",
-      "dev": true
-    },
-    "async-limiter": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.0.tgz",
-      "integrity": "sha512-jp/uFnooOiO+L211eZOoSyzpOITMXx1rBITauYykG3BRYPu8h0UcxsPNB04RR5vo4Tyz3+ay17tR6JVf9qzYWg=="
-    },
     "asynckit": {
       "version": "0.4.0",
       "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
@@ -209,26 +106,11 @@
       "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz",
       "integrity": "sha1-g+9cqGCysy5KDe7e6MdxudtXRx4="
     },
-    "backo2": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/backo2/-/backo2-1.0.2.tgz",
-      "integrity": "sha1-MasayLEpNjRj41s+u2n038+6eUc="
-    },
     "balanced-match": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
       "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="
     },
-    "base64-arraybuffer": {
-      "version": "0.1.5",
-      "resolved": "https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-0.1.5.tgz",
-      "integrity": "sha1-c5JncZI7Whl0etZmqlzUv5xunOg="
-    },
-    "base64id": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/base64id/-/base64id-1.0.0.tgz",
-      "integrity": "sha1-R2iMuZu2gE8OBtPnY7HDLlfY5rY="
-    },
     "base64url": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/base64url/-/base64url-2.0.0.tgz",
@@ -260,25 +142,6 @@
         "tweetnacl": "0.14.5"
       }
     },
-    "better-assert": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/better-assert/-/better-assert-1.0.2.tgz",
-      "integrity": "sha1-QIZrnhueC1W0gYlDEeaPr/rrxSI=",
-      "requires": {
-        "callsite": "1.0.0"
-      }
-    },
-    "binary-extensions": {
-      "version": "1.11.0",
-      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.11.0.tgz",
-      "integrity": "sha1-RqoXUftqL5PuXmibsQh9SxTGwgU=",
-      "dev": true
-    },
-    "blob": {
-      "version": "0.0.4",
-      "resolved": "https://registry.npmjs.org/blob/-/blob-0.0.4.tgz",
-      "integrity": "sha1-vPEwUspURj8w+fx+lbmkdjCpSSE="
-    },
     "block-stream": {
       "version": "0.0.9",
       "resolved": "https://registry.npmjs.org/block-stream/-/block-stream-0.0.9.tgz",
@@ -317,54 +180,6 @@
         "hoek": "4.2.0"
       }
     },
-    "boxen": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/boxen/-/boxen-1.3.0.tgz",
-      "integrity": "sha512-TNPjfTr432qx7yOjQyaXm3dSR0MH9vXp7eT1BFSl/C51g+EFnOR9hTg1IreahGBmDNCehscshe45f+C1TBZbLw==",
-      "dev": true,
-      "requires": {
-        "ansi-align": "2.0.0",
-        "camelcase": "4.1.0",
-        "chalk": "2.3.0",
-        "cli-boxes": "1.0.0",
-        "string-width": "2.1.1",
-        "term-size": "1.2.0",
-        "widest-line": "2.0.0"
-      },
-      "dependencies": {
-        "ansi-regex": {
-          "version": "3.0.0",
-          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
-          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
-          "dev": true
-        },
-        "is-fullwidth-code-point": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
-          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
-          "dev": true
-        },
-        "string-width": {
-          "version": "2.1.1",
-          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
-          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
-          "dev": true,
-          "requires": {
-            "is-fullwidth-code-point": "2.0.0",
-            "strip-ansi": "4.0.0"
-          }
-        },
-        "strip-ansi": {
-          "version": "4.0.0",
-          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
-          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
-          "dev": true,
-          "requires": {
-            "ansi-regex": "3.0.0"
-          }
-        }
-      }
-    },
     "brace-expansion": {
       "version": "1.1.8",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.8.tgz",
@@ -374,17 +189,6 @@
         "concat-map": "0.0.1"
       }
     },
-    "braces": {
-      "version": "1.8.5",
-      "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",
-      "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",
-      "dev": true,
-      "requires": {
-        "expand-range": "1.8.2",
-        "preserve": "0.2.0",
-        "repeat-element": "1.1.2"
-      }
-    },
     "bson": {
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/bson/-/bson-1.0.4.tgz",
@@ -443,62 +247,11 @@
       "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
       "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg="
     },
-    "callsite": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/callsite/-/callsite-1.0.0.tgz",
-      "integrity": "sha1-KAOY5dZkvXQDi28JBRU+borxvCA="
-    },
-    "camelcase": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz",
-      "integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=",
-      "dev": true
-    },
-    "capture-stack-trace": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/capture-stack-trace/-/capture-stack-trace-1.0.0.tgz",
-      "integrity": "sha1-Sm+gc5nCa7pH8LJJa00PtAjFVQ0=",
-      "dev": true
-    },
     "caseless": {
       "version": "0.12.0",
       "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
       "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
     },
-    "chalk": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.3.0.tgz",
-      "integrity": "sha512-Az5zJR2CBujap2rqXGaJKaPHyJ0IrUimvYNX+ncCy8PJP4ltOGTrHUIo097ZaL2zMeKYpiCdqDvS6zdrTFok3Q==",
-      "dev": true,
-      "requires": {
-        "ansi-styles": "3.2.0",
-        "escape-string-regexp": "1.0.5",
-        "supports-color": "4.5.0"
-      }
-    },
-    "chokidar": {
-      "version": "1.7.0",
-      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-1.7.0.tgz",
-      "integrity": "sha1-eY5ol3gVHIB2tLNg5e3SjNortGg=",
-      "dev": true,
-      "requires": {
-        "anymatch": "1.3.2",
-        "async-each": "1.0.1",
-        "fsevents": "1.1.3",
-        "glob-parent": "2.0.0",
-        "inherits": "2.0.3",
-        "is-binary-path": "1.0.1",
-        "is-glob": "2.0.1",
-        "path-is-absolute": "1.0.1",
-        "readdirp": "2.1.0"
-      }
-    },
-    "cli-boxes": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-1.0.0.tgz",
-      "integrity": "sha1-T6kXw+WclKAEzWH47lCdplFocUM=",
-      "dev": true
-    },
     "co": {
       "version": "4.6.0",
       "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
@@ -509,21 +262,6 @@
       "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
       "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="
     },
-    "color-convert": {
-      "version": "1.9.1",
-      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.1.tgz",
-      "integrity": "sha512-mjGanIiwQJskCC18rPR6OmrZ6fm2Lc7PeGFYwCmy5J34wC6F1PzdGL6xeMfmgicfYcNLGuVFA3WzXtIDCQSZxQ==",
-      "dev": true,
-      "requires": {
-        "color-name": "1.1.3"
-      }
-    },
-    "color-name": {
-      "version": "1.1.3",
-      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
-      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
-      "dev": true
-    },
     "combined-stream": {
       "version": "1.0.5",
       "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.5.tgz",
@@ -532,21 +270,6 @@
         "delayed-stream": "1.0.0"
       }
     },
-    "component-bind": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/component-bind/-/component-bind-1.0.0.tgz",
-      "integrity": "sha1-AMYIq33Nk4l8AAllGx06jh5zu9E="
-    },
-    "component-emitter": {
-      "version": "1.2.1",
-      "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz",
-      "integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
-    },
-    "component-inherit": {
-      "version": "0.0.3",
-      "resolved": "https://registry.npmjs.org/component-inherit/-/component-inherit-0.0.3.tgz",
-      "integrity": "sha1-ZF/ErfWLcrZJ1crmUTVhnbJv8UM="
-    },
     "concat-map": {
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
@@ -562,20 +285,6 @@
         "typedarray": "0.0.6"
       }
     },
-    "configstore": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/configstore/-/configstore-3.1.1.tgz",
-      "integrity": "sha512-5oNkD/L++l0O6xGXxb1EWS7SivtjfGQlRyxJsYgE0Z495/L81e2h4/d3r969hoPXuFItzNOKMtsXgYG4c7dYvw==",
-      "dev": true,
-      "requires": {
-        "dot-prop": "4.2.0",
-        "graceful-fs": "4.1.11",
-        "make-dir": "1.1.0",
-        "unique-string": "1.0.0",
-        "write-file-atomic": "2.3.0",
-        "xdg-basedir": "3.0.0"
-      }
-    },
     "connect-flash": {
       "version": "0.1.1",
       "resolved": "https://registry.npmjs.org/connect-flash/-/connect-flash-0.1.1.tgz",
@@ -634,26 +343,6 @@
       "resolved": "https://registry.npmjs.org/crc/-/crc-3.4.4.tgz",
       "integrity": "sha1-naHpgOO9RPxck79as9ozeNheRms="
     },
-    "create-error-class": {
-      "version": "3.0.2",
-      "resolved": "https://registry.npmjs.org/create-error-class/-/create-error-class-3.0.2.tgz",
-      "integrity": "sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=",
-      "dev": true,
-      "requires": {
-        "capture-stack-trace": "1.0.0"
-      }
-    },
-    "cross-spawn": {
-      "version": "5.1.0",
-      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
-      "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
-      "dev": true,
-      "requires": {
-        "lru-cache": "4.1.1",
-        "shebang-command": "1.2.0",
-        "which": "1.3.0"
-      }
-    },
     "cryptiles": {
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/cryptiles/-/cryptiles-3.1.2.tgz",
@@ -672,12 +361,6 @@
         }
       }
     },
-    "crypto-random-string": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-1.0.0.tgz",
-      "integrity": "sha1-ojD2T1aDEOFJgAmUB5DsmVRbyn4=",
-      "dev": true
-    },
     "dashdash": {
       "version": "1.14.1",
       "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
@@ -751,27 +434,6 @@
         }
       }
     },
-    "dot-prop": {
-      "version": "4.2.0",
-      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-4.2.0.tgz",
-      "integrity": "sha512-tUMXrxlExSW6U2EXiiKGSBVdYgtV8qlHL+C10TsW4PURY/ic+eaysnSkwB4kA/mBlCyy/IKDJ+Lc3wbWeaXtuQ==",
-      "dev": true,
-      "requires": {
-        "is-obj": "1.0.1"
-      }
-    },
-    "duplexer": {
-      "version": "0.1.1",
-      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz",
-      "integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E=",
-      "dev": true
-    },
-    "duplexer3": {
-      "version": "0.1.4",
-      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
-      "integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI=",
-      "dev": true
-    },
     "ecc-jsbn": {
       "version": "0.1.1",
       "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz",
@@ -832,61 +494,6 @@
         "iconv-lite": "0.4.19"
       }
     },
-    "engine.io": {
-      "version": "3.1.4",
-      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-3.1.4.tgz",
-      "integrity": "sha1-PQIRtwpVLOhB/8fahiezAamkFi4=",
-      "requires": {
-        "accepts": "1.3.3",
-        "base64id": "1.0.0",
-        "cookie": "0.3.1",
-        "debug": "2.6.9",
-        "engine.io-parser": "2.1.1",
-        "uws": "0.14.5",
-        "ws": "3.3.3"
-      },
-      "dependencies": {
-        "accepts": {
-          "version": "1.3.3",
-          "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.3.tgz",
-          "integrity": "sha1-w8p0NJOGSMPg2cHjKN1otiLChMo=",
-          "requires": {
-            "mime-types": "2.1.17",
-            "negotiator": "0.6.1"
-          }
-        }
-      }
-    },
-    "engine.io-client": {
-      "version": "3.1.4",
-      "resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-3.1.4.tgz",
-      "integrity": "sha1-T88TcLRxY70s6b4nM5ckMDUNTqE=",
-      "requires": {
-        "component-emitter": "1.2.1",
-        "component-inherit": "0.0.3",
-        "debug": "2.6.9",
-        "engine.io-parser": "2.1.1",
-        "has-cors": "1.1.0",
-        "indexof": "0.0.1",
-        "parseqs": "0.0.5",
-        "parseuri": "0.0.5",
-        "ws": "3.3.3",
-        "xmlhttprequest-ssl": "1.5.4",
-        "yeast": "0.1.2"
-      }
-    },
-    "engine.io-parser": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-2.1.1.tgz",
-      "integrity": "sha1-4Ps/DgRi9/WLt3waUun1p+JuRmg=",
-      "requires": {
-        "after": "0.8.2",
-        "arraybuffer.slice": "0.0.6",
-        "base64-arraybuffer": "0.1.5",
-        "blob": "0.0.4",
-        "has-binary2": "1.0.2"
-      }
-    },
     "es6-promise": {
       "version": "3.2.1",
       "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-3.2.1.tgz",
@@ -897,65 +504,11 @@
       "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
       "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="
     },
-    "escape-string-regexp": {
-      "version": "1.0.5",
-      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
-      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
-      "dev": true
-    },
     "etag": {
       "version": "1.8.1",
       "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
       "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
     },
-    "event-stream": {
-      "version": "3.3.4",
-      "resolved": "https://registry.npmjs.org/event-stream/-/event-stream-3.3.4.tgz",
-      "integrity": "sha1-SrTJoPWlTbkzi0w02Gv86PSzVXE=",
-      "dev": true,
-      "requires": {
-        "duplexer": "0.1.1",
-        "from": "0.1.7",
-        "map-stream": "0.1.0",
-        "pause-stream": "0.0.11",
-        "split": "0.3.3",
-        "stream-combiner": "0.0.4",
-        "through": "2.3.8"
-      }
-    },
-    "execa": {
-      "version": "0.7.0",
-      "resolved": "https://registry.npmjs.org/execa/-/execa-0.7.0.tgz",
-      "integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
-      "dev": true,
-      "requires": {
-        "cross-spawn": "5.1.0",
-        "get-stream": "3.0.0",
-        "is-stream": "1.1.0",
-        "npm-run-path": "2.0.2",
-        "p-finally": "1.0.0",
-        "signal-exit": "3.0.2",
-        "strip-eof": "1.0.0"
-      }
-    },
-    "expand-brackets": {
-      "version": "0.1.5",
-      "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz",
-      "integrity": "sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=",
-      "dev": true,
-      "requires": {
-        "is-posix-bracket": "0.1.1"
-      }
-    },
-    "expand-range": {
-      "version": "1.8.2",
-      "resolved": "https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz",
-      "integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
-      "dev": true,
-      "requires": {
-        "fill-range": "2.2.3"
-      }
-    },
     "express": {
       "version": "4.16.2",
       "resolved": "https://registry.npmjs.org/express/-/express-4.16.2.tgz",
@@ -1014,15 +567,6 @@
       "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.1.tgz",
       "integrity": "sha1-p1Xqe8Gt/MWjHOfnYtuq3F5jZEQ="
     },
-    "extglob": {
-      "version": "0.3.2",
-      "resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",
-      "integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
-      "dev": true,
-      "requires": {
-        "is-extglob": "1.0.0"
-      }
-    },
     "extsprintf": {
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
@@ -1038,25 +582,6 @@
       "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
       "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
     },
-    "filename-regex": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.1.tgz",
-      "integrity": "sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY=",
-      "dev": true
-    },
-    "fill-range": {
-      "version": "2.2.3",
-      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.3.tgz",
-      "integrity": "sha1-ULd9/X5Gm8dJJHCWNpn+eoSFpyM=",
-      "dev": true,
-      "requires": {
-        "is-number": "2.1.0",
-        "isobject": "2.1.0",
-        "randomatic": "1.1.7",
-        "repeat-element": "1.1.2",
-        "repeat-string": "1.6.1"
-      }
-    },
     "finalhandler": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.0.tgz",
@@ -1071,21 +596,6 @@
         "unpipe": "1.0.0"
       }
     },
-    "for-in": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
-      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",
-      "dev": true
-    },
-    "for-own": {
-      "version": "0.1.5",
-      "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",
-      "integrity": "sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=",
-      "dev": true,
-      "requires": {
-        "for-in": "1.0.2"
-      }
-    },
     "forever-agent": {
       "version": "0.6.1",
       "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
@@ -1111,921 +621,11 @@
       "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
       "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac="
     },
-    "from": {
-      "version": "0.1.7",
-      "resolved": "https://registry.npmjs.org/from/-/from-0.1.7.tgz",
-      "integrity": "sha1-g8YK/Fi5xWmXAH7Rp2izqzA6RP4=",
-      "dev": true
-    },
     "fs.realpath": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
       "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
     },
-    "fsevents": {
-      "version": "1.1.3",
-      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.1.3.tgz",
-      "integrity": "sha512-WIr7iDkdmdbxu/Gh6eKEZJL6KPE74/5MEsf2whTOFNxbIoIixogroLdKYqB6FDav4Wavh/lZdzzd3b2KxIXC5Q==",
-      "dev": true,
-      "optional": true,
-      "requires": {
-        "nan": "2.6.2",
-        "node-pre-gyp": "0.6.39"
-      },
-      "dependencies": {
-        "abbrev": {
-          "version": "1.1.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "ajv": {
-          "version": "4.11.8",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "co": "4.6.0",
-            "json-stable-stringify": "1.0.1"
-          }
-        },
-        "ansi-regex": {
-          "version": "2.1.1",
-          "bundled": true,
-          "dev": true
-        },
-        "aproba": {
-          "version": "1.1.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "are-we-there-yet": {
-          "version": "1.1.4",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "delegates": "1.0.0",
-            "readable-stream": "2.2.9"
-          }
-        },
-        "asn1": {
-          "version": "0.2.3",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "assert-plus": {
-          "version": "0.2.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "asynckit": {
-          "version": "0.4.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "aws-sign2": {
-          "version": "0.6.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "aws4": {
-          "version": "1.6.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "balanced-match": {
-          "version": "0.4.2",
-          "bundled": true,
-          "dev": true
-        },
-        "bcrypt-pbkdf": {
-          "version": "1.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "tweetnacl": "0.14.5"
-          }
-        },
-        "block-stream": {
-          "version": "0.0.9",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "inherits": "2.0.3"
-          }
-        },
-        "boom": {
-          "version": "2.10.1",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "hoek": "2.16.3"
-          }
-        },
-        "brace-expansion": {
-          "version": "1.1.7",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "balanced-match": "0.4.2",
-            "concat-map": "0.0.1"
-          }
-        },
-        "buffer-shims": {
-          "version": "1.0.0",
-          "bundled": true,
-          "dev": true
-        },
-        "caseless": {
-          "version": "0.12.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "co": {
-          "version": "4.6.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "code-point-at": {
-          "version": "1.1.0",
-          "bundled": true,
-          "dev": true
-        },
-        "combined-stream": {
-          "version": "1.0.5",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "delayed-stream": "1.0.0"
-          }
-        },
-        "concat-map": {
-          "version": "0.0.1",
-          "bundled": true,
-          "dev": true
-        },
-        "console-control-strings": {
-          "version": "1.1.0",
-          "bundled": true,
-          "dev": true
-        },
-        "core-util-is": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true
-        },
-        "cryptiles": {
-          "version": "2.0.5",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "boom": "2.10.1"
-          }
-        },
-        "dashdash": {
-          "version": "1.14.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "assert-plus": "1.0.0"
-          },
-          "dependencies": {
-            "assert-plus": {
-              "version": "1.0.0",
-              "bundled": true,
-              "dev": true,
-              "optional": true
-            }
-          }
-        },
-        "debug": {
-          "version": "2.6.8",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "ms": "2.0.0"
-          }
-        },
-        "deep-extend": {
-          "version": "0.4.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "delayed-stream": {
-          "version": "1.0.0",
-          "bundled": true,
-          "dev": true
-        },
-        "delegates": {
-          "version": "1.0.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "detect-libc": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "ecc-jsbn": {
-          "version": "0.1.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "jsbn": "0.1.1"
-          }
-        },
-        "extend": {
-          "version": "3.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "extsprintf": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true
-        },
-        "forever-agent": {
-          "version": "0.6.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "form-data": {
-          "version": "2.1.4",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "asynckit": "0.4.0",
-            "combined-stream": "1.0.5",
-            "mime-types": "2.1.15"
-          }
-        },
-        "fs.realpath": {
-          "version": "1.0.0",
-          "bundled": true,
-          "dev": true
-        },
-        "fstream": {
-          "version": "1.0.11",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "graceful-fs": "4.1.11",
-            "inherits": "2.0.3",
-            "mkdirp": "0.5.1",
-            "rimraf": "2.6.1"
-          }
-        },
-        "fstream-ignore": {
-          "version": "1.0.5",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "fstream": "1.0.11",
-            "inherits": "2.0.3",
-            "minimatch": "3.0.4"
-          }
-        },
-        "gauge": {
-          "version": "2.7.4",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "aproba": "1.1.1",
-            "console-control-strings": "1.1.0",
-            "has-unicode": "2.0.1",
-            "object-assign": "4.1.1",
-            "signal-exit": "3.0.2",
-            "string-width": "1.0.2",
-            "strip-ansi": "3.0.1",
-            "wide-align": "1.1.2"
-          }
-        },
-        "getpass": {
-          "version": "0.1.7",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "assert-plus": "1.0.0"
-          },
-          "dependencies": {
-            "assert-plus": {
-              "version": "1.0.0",
-              "bundled": true,
-              "dev": true,
-              "optional": true
-            }
-          }
-        },
-        "glob": {
-          "version": "7.1.2",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "fs.realpath": "1.0.0",
-            "inflight": "1.0.6",
-            "inherits": "2.0.3",
-            "minimatch": "3.0.4",
-            "once": "1.4.0",
-            "path-is-absolute": "1.0.1"
-          }
-        },
-        "graceful-fs": {
-          "version": "4.1.11",
-          "bundled": true,
-          "dev": true
-        },
-        "har-schema": {
-          "version": "1.0.5",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "har-validator": {
-          "version": "4.2.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "ajv": "4.11.8",
-            "har-schema": "1.0.5"
-          }
-        },
-        "has-unicode": {
-          "version": "2.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "hawk": {
-          "version": "3.1.3",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "boom": "2.10.1",
-            "cryptiles": "2.0.5",
-            "hoek": "2.16.3",
-            "sntp": "1.0.9"
-          }
-        },
-        "hoek": {
-          "version": "2.16.3",
-          "bundled": true,
-          "dev": true
-        },
-        "http-signature": {
-          "version": "1.1.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "assert-plus": "0.2.0",
-            "jsprim": "1.4.0",
-            "sshpk": "1.13.0"
-          }
-        },
-        "inflight": {
-          "version": "1.0.6",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "once": "1.4.0",
-            "wrappy": "1.0.2"
-          }
-        },
-        "inherits": {
-          "version": "2.0.3",
-          "bundled": true,
-          "dev": true
-        },
-        "ini": {
-          "version": "1.3.4",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "is-fullwidth-code-point": {
-          "version": "1.0.0",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "number-is-nan": "1.0.1"
-          }
-        },
-        "is-typedarray": {
-          "version": "1.0.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "isarray": {
-          "version": "1.0.0",
-          "bundled": true,
-          "dev": true
-        },
-        "isstream": {
-          "version": "0.1.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "jodid25519": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "jsbn": "0.1.1"
-          }
-        },
-        "jsbn": {
-          "version": "0.1.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "json-schema": {
-          "version": "0.2.3",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "json-stable-stringify": {
-          "version": "1.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "jsonify": "0.0.0"
-          }
-        },
-        "json-stringify-safe": {
-          "version": "5.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "jsonify": {
-          "version": "0.0.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "jsprim": {
-          "version": "1.4.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "assert-plus": "1.0.0",
-            "extsprintf": "1.0.2",
-            "json-schema": "0.2.3",
-            "verror": "1.3.6"
-          },
-          "dependencies": {
-            "assert-plus": {
-              "version": "1.0.0",
-              "bundled": true,
-              "dev": true,
-              "optional": true
-            }
-          }
-        },
-        "mime-db": {
-          "version": "1.27.0",
-          "bundled": true,
-          "dev": true
-        },
-        "mime-types": {
-          "version": "2.1.15",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "mime-db": "1.27.0"
-          }
-        },
-        "minimatch": {
-          "version": "3.0.4",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "brace-expansion": "1.1.7"
-          }
-        },
-        "minimist": {
-          "version": "0.0.8",
-          "bundled": true,
-          "dev": true
-        },
-        "mkdirp": {
-          "version": "0.5.1",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "minimist": "0.0.8"
-          }
-        },
-        "ms": {
-          "version": "2.0.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "node-pre-gyp": {
-          "version": "0.6.39",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "detect-libc": "1.0.2",
-            "hawk": "3.1.3",
-            "mkdirp": "0.5.1",
-            "nopt": "4.0.1",
-            "npmlog": "4.1.0",
-            "rc": "1.2.1",
-            "request": "2.81.0",
-            "rimraf": "2.6.1",
-            "semver": "5.3.0",
-            "tar": "2.2.1",
-            "tar-pack": "3.4.0"
-          }
-        },
-        "nopt": {
-          "version": "4.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "abbrev": "1.1.0",
-            "osenv": "0.1.4"
-          }
-        },
-        "npmlog": {
-          "version": "4.1.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "are-we-there-yet": "1.1.4",
-            "console-control-strings": "1.1.0",
-            "gauge": "2.7.4",
-            "set-blocking": "2.0.0"
-          }
-        },
-        "number-is-nan": {
-          "version": "1.0.1",
-          "bundled": true,
-          "dev": true
-        },
-        "oauth-sign": {
-          "version": "0.8.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "object-assign": {
-          "version": "4.1.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "once": {
-          "version": "1.4.0",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "wrappy": "1.0.2"
-          }
-        },
-        "os-homedir": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "os-tmpdir": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "osenv": {
-          "version": "0.1.4",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "os-homedir": "1.0.2",
-            "os-tmpdir": "1.0.2"
-          }
-        },
-        "path-is-absolute": {
-          "version": "1.0.1",
-          "bundled": true,
-          "dev": true
-        },
-        "performance-now": {
-          "version": "0.2.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "process-nextick-args": {
-          "version": "1.0.7",
-          "bundled": true,
-          "dev": true
-        },
-        "punycode": {
-          "version": "1.4.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "qs": {
-          "version": "6.4.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "rc": {
-          "version": "1.2.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "deep-extend": "0.4.2",
-            "ini": "1.3.4",
-            "minimist": "1.2.0",
-            "strip-json-comments": "2.0.1"
-          },
-          "dependencies": {
-            "minimist": {
-              "version": "1.2.0",
-              "bundled": true,
-              "dev": true,
-              "optional": true
-            }
-          }
-        },
-        "readable-stream": {
-          "version": "2.2.9",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "buffer-shims": "1.0.0",
-            "core-util-is": "1.0.2",
-            "inherits": "2.0.3",
-            "isarray": "1.0.0",
-            "process-nextick-args": "1.0.7",
-            "string_decoder": "1.0.1",
-            "util-deprecate": "1.0.2"
-          }
-        },
-        "request": {
-          "version": "2.81.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "aws-sign2": "0.6.0",
-            "aws4": "1.6.0",
-            "caseless": "0.12.0",
-            "combined-stream": "1.0.5",
-            "extend": "3.0.1",
-            "forever-agent": "0.6.1",
-            "form-data": "2.1.4",
-            "har-validator": "4.2.1",
-            "hawk": "3.1.3",
-            "http-signature": "1.1.1",
-            "is-typedarray": "1.0.0",
-            "isstream": "0.1.2",
-            "json-stringify-safe": "5.0.1",
-            "mime-types": "2.1.15",
-            "oauth-sign": "0.8.2",
-            "performance-now": "0.2.0",
-            "qs": "6.4.0",
-            "safe-buffer": "5.0.1",
-            "stringstream": "0.0.5",
-            "tough-cookie": "2.3.2",
-            "tunnel-agent": "0.6.0",
-            "uuid": "3.0.1"
-          }
-        },
-        "rimraf": {
-          "version": "2.6.1",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "glob": "7.1.2"
-          }
-        },
-        "safe-buffer": {
-          "version": "5.0.1",
-          "bundled": true,
-          "dev": true
-        },
-        "semver": {
-          "version": "5.3.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "set-blocking": {
-          "version": "2.0.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "signal-exit": {
-          "version": "3.0.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "sntp": {
-          "version": "1.0.9",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "hoek": "2.16.3"
-          }
-        },
-        "sshpk": {
-          "version": "1.13.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "asn1": "0.2.3",
-            "assert-plus": "1.0.0",
-            "bcrypt-pbkdf": "1.0.1",
-            "dashdash": "1.14.1",
-            "ecc-jsbn": "0.1.1",
-            "getpass": "0.1.7",
-            "jodid25519": "1.0.2",
-            "jsbn": "0.1.1",
-            "tweetnacl": "0.14.5"
-          },
-          "dependencies": {
-            "assert-plus": {
-              "version": "1.0.0",
-              "bundled": true,
-              "dev": true,
-              "optional": true
-            }
-          }
-        },
-        "string-width": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "code-point-at": "1.1.0",
-            "is-fullwidth-code-point": "1.0.0",
-            "strip-ansi": "3.0.1"
-          }
-        },
-        "string_decoder": {
-          "version": "1.0.1",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "safe-buffer": "5.0.1"
-          }
-        },
-        "stringstream": {
-          "version": "0.0.5",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "strip-ansi": {
-          "version": "3.0.1",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "ansi-regex": "2.1.1"
-          }
-        },
-        "strip-json-comments": {
-          "version": "2.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "tar": {
-          "version": "2.2.1",
-          "bundled": true,
-          "dev": true,
-          "requires": {
-            "block-stream": "0.0.9",
-            "fstream": "1.0.11",
-            "inherits": "2.0.3"
-          }
-        },
-        "tar-pack": {
-          "version": "3.4.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "debug": "2.6.8",
-            "fstream": "1.0.11",
-            "fstream-ignore": "1.0.5",
-            "once": "1.4.0",
-            "readable-stream": "2.2.9",
-            "rimraf": "2.6.1",
-            "tar": "2.2.1",
-            "uid-number": "0.0.6"
-          }
-        },
-        "tough-cookie": {
-          "version": "2.3.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "punycode": "1.4.1"
-          }
-        },
-        "tunnel-agent": {
-          "version": "0.6.0",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "safe-buffer": "5.0.1"
-          }
-        },
-        "tweetnacl": {
-          "version": "0.14.5",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "uid-number": {
-          "version": "0.0.6",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "util-deprecate": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true
-        },
-        "uuid": {
-          "version": "3.0.1",
-          "bundled": true,
-          "dev": true,
-          "optional": true
-        },
-        "verror": {
-          "version": "1.3.6",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "extsprintf": "1.0.2"
-          }
-        },
-        "wide-align": {
-          "version": "1.1.2",
-          "bundled": true,
-          "dev": true,
-          "optional": true,
-          "requires": {
-            "string-width": "1.0.2"
-          }
-        },
-        "wrappy": {
-          "version": "1.0.2",
-          "bundled": true,
-          "dev": true
-        }
-      }
-    },
     "fstream": {
       "version": "1.0.11",
       "resolved": "https://registry.npmjs.org/fstream/-/fstream-1.0.11.tgz",
@@ -2067,12 +667,6 @@
       "resolved": "https://registry.npmjs.org/geolib/-/geolib-2.0.24.tgz",
       "integrity": "sha512-NR0AyYyEnGrFS9JvSFmmotQDxVCORJgDHdvBwSatxl5aHarOLMh3KuGI83bCvCfObjfoEiDe8Ung8GGLGAtthw=="
     },
-    "get-stream": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
-      "integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ=",
-      "dev": true
-    },
     "getpass": {
       "version": "0.1.7",
       "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
@@ -2094,53 +688,6 @@
         "path-is-absolute": "1.0.1"
       }
     },
-    "glob-base": {
-      "version": "0.3.0",
-      "resolved": "https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz",
-      "integrity": "sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=",
-      "dev": true,
-      "requires": {
-        "glob-parent": "2.0.0",
-        "is-glob": "2.0.1"
-      }
-    },
-    "glob-parent": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz",
-      "integrity": "sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=",
-      "dev": true,
-      "requires": {
-        "is-glob": "2.0.1"
-      }
-    },
-    "global-dirs": {
-      "version": "0.1.1",
-      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-0.1.1.tgz",
-      "integrity": "sha1-sxnA3UYH81PzvpzKTHL8FIxJ9EU=",
-      "dev": true,
-      "requires": {
-        "ini": "1.3.4"
-      }
-    },
-    "got": {
-      "version": "6.7.1",
-      "resolved": "https://registry.npmjs.org/got/-/got-6.7.1.tgz",
-      "integrity": "sha1-JAzQV4WpoY5WHcG0S0HHY+8ejbA=",
-      "dev": true,
-      "requires": {
-        "create-error-class": "3.0.2",
-        "duplexer3": "0.1.4",
-        "get-stream": "3.0.0",
-        "is-redirect": "1.0.0",
-        "is-retry-allowed": "1.1.0",
-        "is-stream": "1.1.0",
-        "lowercase-keys": "1.0.0",
-        "safe-buffer": "5.1.1",
-        "timed-out": "4.0.1",
-        "unzip-response": "2.0.1",
-        "url-parse-lax": "1.0.0"
-      }
-    },
     "graceful-fs": {
       "version": "4.1.11",
       "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
@@ -2156,36 +703,10 @@
       "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz",
       "integrity": "sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=",
       "requires": {
-        "ajv": "5.5.2",
+        "ajv": "5.3.0",
         "har-schema": "2.0.0"
       }
     },
-    "has-binary2": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/has-binary2/-/has-binary2-1.0.2.tgz",
-      "integrity": "sha1-6D26SfC5vk0CbSc2U1DZ8D9Uvpg=",
-      "requires": {
-        "isarray": "2.0.1"
-      },
-      "dependencies": {
-        "isarray": {
-          "version": "2.0.1",
-          "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.1.tgz",
-          "integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4="
-        }
-      }
-    },
-    "has-cors": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/has-cors/-/has-cors-1.1.0.tgz",
-      "integrity": "sha1-XkdHk/fqmEPRu5nCPu9J/xJv/zk="
-    },
-    "has-flag": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
-      "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
-      "dev": true
-    },
     "has-unicode": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
@@ -2212,11 +733,6 @@
       "resolved": "https://registry.npmjs.org/hooks-fixed/-/hooks-fixed-2.0.2.tgz",
       "integrity": "sha512-YurCM4gQSetcrhwEtpQHhQ4M7Zo7poNGqY4kQGeBS6eZtOcT3tnNs01ThFa0jYBByAiYt1MjMjP/YApG0EnAvQ=="
     },
-    "http": {
-      "version": "0.0.0",
-      "resolved": "https://registry.npmjs.org/http/-/http-0.0.0.tgz",
-      "integrity": "sha1-huYybSnF0Dnen6xYSkVon5KfT3I="
-    },
     "http-errors": {
       "version": "1.6.2",
       "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.2.tgz",
@@ -2250,29 +766,6 @@
       "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.19.tgz",
       "integrity": "sha512-oTZqweIP51xaGPI4uPa56/Pri/480R+mo7SeU+YETByQNhDG55ycFyNLIgta9vXhILrxXDmF7ZGhqZIcuN0gJQ=="
     },
-    "ignore-by-default": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
-      "integrity": "sha1-SMptcvbGo68Aqa1K5odr44ieKwk=",
-      "dev": true
-    },
-    "import-lazy": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
-      "integrity": "sha1-BWmOPUXIjo1+nZLLBYTnfwlvPkM=",
-      "dev": true
-    },
-    "imurmurhash": {
-      "version": "0.1.4",
-      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
-      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
-      "dev": true
-    },
-    "indexof": {
-      "version": "0.0.1",
-      "resolved": "https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz",
-      "integrity": "sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10="
-    },
     "inflight": {
       "version": "1.0.6",
       "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
@@ -2297,48 +790,6 @@
       "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.5.2.tgz",
       "integrity": "sha1-1LUFvemUaYfM8PxY2QEP+WB+P6A="
     },
-    "is-binary-path": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
-      "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
-      "dev": true,
-      "requires": {
-        "binary-extensions": "1.11.0"
-      }
-    },
-    "is-buffer": {
-      "version": "1.1.6",
-      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
-      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
-      "dev": true
-    },
-    "is-dotfile": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.3.tgz",
-      "integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE=",
-      "dev": true
-    },
-    "is-equal-shallow": {
-      "version": "0.1.3",
-      "resolved": "https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz",
-      "integrity": "sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=",
-      "dev": true,
-      "requires": {
-        "is-primitive": "2.0.0"
-      }
-    },
-    "is-extendable": {
-      "version": "0.1.1",
-      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
-      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
-      "dev": true
-    },
-    "is-extglob": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
-      "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
-      "dev": true
-    },
     "is-fullwidth-code-point": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
@@ -2347,79 +798,6 @@
         "number-is-nan": "1.0.1"
       }
     },
-    "is-glob": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
-      "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
-      "dev": true,
-      "requires": {
-        "is-extglob": "1.0.0"
-      }
-    },
-    "is-installed-globally": {
-      "version": "0.1.0",
-      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.1.0.tgz",
-      "integrity": "sha1-Df2Y9akRFxbdU13aZJL2e/PSWoA=",
-      "dev": true,
-      "requires": {
-        "global-dirs": "0.1.1",
-        "is-path-inside": "1.0.1"
-      }
-    },
-    "is-npm": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-1.0.0.tgz",
-      "integrity": "sha1-8vtjpl5JBbQGyGBydloaTceTufQ=",
-      "dev": true
-    },
-    "is-number": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz",
-      "integrity": "sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=",
-      "dev": true,
-      "requires": {
-        "kind-of": "3.2.2"
-      }
-    },
-    "is-obj": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",
-      "integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8=",
-      "dev": true
-    },
-    "is-path-inside": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",
-      "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
-      "dev": true,
-      "requires": {
-        "path-is-inside": "1.0.2"
-      }
-    },
-    "is-posix-bracket": {
-      "version": "0.1.1",
-      "resolved": "https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz",
-      "integrity": "sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q=",
-      "dev": true
-    },
-    "is-primitive": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz",
-      "integrity": "sha1-IHurkWOEmcB7Kt8kCkGochADRXU=",
-      "dev": true
-    },
-    "is-redirect": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/is-redirect/-/is-redirect-1.0.0.tgz",
-      "integrity": "sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ=",
-      "dev": true
-    },
-    "is-retry-allowed": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.1.0.tgz",
-      "integrity": "sha1-EaBgVotnM5REAz0BJaYaINVk+zQ=",
-      "dev": true
-    },
     "is-stream": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
@@ -2435,21 +813,6 @@
       "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
       "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
     },
-    "isexe": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
-      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
-      "dev": true
-    },
-    "isobject": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
-      "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
-      "dev": true,
-      "requires": {
-        "isarray": "1.0.0"
-      }
-    },
     "isstream": {
       "version": "0.1.2",
       "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
@@ -2528,97 +891,13 @@
     "kareem": {
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/kareem/-/kareem-1.5.0.tgz",
-      "integrity": "sha1-4+QQHZ3P3imXadr0tNtk2JXRdEg="
-    },
-    "kind-of": {
-      "version": "3.2.2",
-      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
-      "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
-      "dev": true,
-      "requires": {
-        "is-buffer": "1.1.6"
-      }
-    },
-    "latest-version": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-3.1.0.tgz",
-      "integrity": "sha1-ogU4P+oyKzO1rjsYq+4NwvNW7hU=",
-      "dev": true,
-      "requires": {
-        "package-json": "4.0.1"
-      }
+      "integrity": "sha1-4+QQHZ3P3imXadr0tNtk2JXRdEg="
     },
     "lodash": {
       "version": "4.17.4",
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
       "integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4="
     },
-    "lodash._baseassign": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/lodash._baseassign/-/lodash._baseassign-3.2.0.tgz",
-      "integrity": "sha1-jDigmVAPIVrQnlnxci/QxSv+Ck4=",
-      "dev": true,
-      "requires": {
-        "lodash._basecopy": "3.0.1",
-        "lodash.keys": "3.1.2"
-      }
-    },
-    "lodash._basecopy": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz",
-      "integrity": "sha1-jaDmqHbPNEwK2KVIghEd08XHyjY=",
-      "dev": true
-    },
-    "lodash._bindcallback": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/lodash._bindcallback/-/lodash._bindcallback-3.0.1.tgz",
-      "integrity": "sha1-5THCdkTPi1epnhftlbNcdIeJOS4=",
-      "dev": true
-    },
-    "lodash._createassigner": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/lodash._createassigner/-/lodash._createassigner-3.1.1.tgz",
-      "integrity": "sha1-g4pbri/aymOsIt7o4Z+k5taXCxE=",
-      "dev": true,
-      "requires": {
-        "lodash._bindcallback": "3.0.1",
-        "lodash._isiterateecall": "3.0.9",
-        "lodash.restparam": "3.6.1"
-      }
-    },
-    "lodash._getnative": {
-      "version": "3.9.1",
-      "resolved": "https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz",
-      "integrity": "sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U=",
-      "dev": true
-    },
-    "lodash._isiterateecall": {
-      "version": "3.0.9",
-      "resolved": "https://registry.npmjs.org/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz",
-      "integrity": "sha1-UgOte6Ql+uhCRg5pbbnPPmqsBXw=",
-      "dev": true
-    },
-    "lodash.assign": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/lodash.assign/-/lodash.assign-3.2.0.tgz",
-      "integrity": "sha1-POnwI0tLIiPilrj6CsH+6OvKZPo=",
-      "dev": true,
-      "requires": {
-        "lodash._baseassign": "3.2.0",
-        "lodash._createassigner": "3.1.1",
-        "lodash.keys": "3.1.2"
-      }
-    },
-    "lodash.defaults": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-3.1.2.tgz",
-      "integrity": "sha1-xzCLGNv4vJNy1wGnNJPGEZK9Liw=",
-      "dev": true,
-      "requires": {
-        "lodash.assign": "3.2.0",
-        "lodash.restparam": "3.6.1"
-      }
-    },
     "lodash.get": {
       "version": "4.4.2",
       "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
@@ -2629,18 +908,6 @@
       "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
       "integrity": "sha1-YLuYqHy5I8aMoeUTJUgzFISfVT8="
     },
-    "lodash.isarguments": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz",
-      "integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo=",
-      "dev": true
-    },
-    "lodash.isarray": {
-      "version": "3.0.4",
-      "resolved": "https://registry.npmjs.org/lodash.isarray/-/lodash.isarray-3.0.4.tgz",
-      "integrity": "sha1-eeTriMNqgSKvhvhEqpvNhRtfu1U=",
-      "dev": true
-    },
     "lodash.isboolean": {
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
@@ -2666,59 +933,11 @@
       "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
       "integrity": "sha1-1SfftUVuynzJu5XV2ur4i6VKVFE="
     },
-    "lodash.keys": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-3.1.2.tgz",
-      "integrity": "sha1-TbwEcrFWvlCgsoaFXRvQsMZWCYo=",
-      "dev": true,
-      "requires": {
-        "lodash._getnative": "3.9.1",
-        "lodash.isarguments": "3.1.0",
-        "lodash.isarray": "3.0.4"
-      }
-    },
     "lodash.once": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
       "integrity": "sha1-DdOXEhPHxW34gJd9UEyI+0cal6w="
     },
-    "lodash.restparam": {
-      "version": "3.6.1",
-      "resolved": "https://registry.npmjs.org/lodash.restparam/-/lodash.restparam-3.6.1.tgz",
-      "integrity": "sha1-k2pOMJ7zMKdkXtQUWYbIWuWyCAU=",
-      "dev": true
-    },
-    "lowercase-keys": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.0.tgz",
-      "integrity": "sha1-TjNms55/VFfjXxMkvfb4jQv8cwY=",
-      "dev": true
-    },
-    "lru-cache": {
-      "version": "4.1.1",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.1.tgz",
-      "integrity": "sha512-q4spe4KTfsAS1SUHLO0wz8Qiyf1+vMIAgpRYioFYDMNqKfHQbg+AVDH3i4fvpl71/P1L0dBl+fQi+P37UYf0ew==",
-      "dev": true,
-      "requires": {
-        "pseudomap": "1.0.2",
-        "yallist": "2.1.2"
-      }
-    },
-    "make-dir": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-1.1.0.tgz",
-      "integrity": "sha512-0Pkui4wLJ7rxvmfUvs87skoEaxmu0hCUApF8nonzpl7q//FWp9zu8W61Scz4sd/kUiqDxvUhtoam2efDyiBzcA==",
-      "dev": true,
-      "requires": {
-        "pify": "3.0.0"
-      }
-    },
-    "map-stream": {
-      "version": "0.1.0",
-      "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz",
-      "integrity": "sha1-5WqpTEyAVaFkBKBnS3jyFffI4ZQ=",
-      "dev": true
-    },
     "media-typer": {
       "version": "0.3.0",
       "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
@@ -2734,27 +953,6 @@
       "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
       "integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
     },
-    "micromatch": {
-      "version": "2.3.11",
-      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",
-      "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",
-      "dev": true,
-      "requires": {
-        "arr-diff": "2.0.0",
-        "array-unique": "0.2.1",
-        "braces": "1.8.5",
-        "expand-brackets": "0.1.5",
-        "extglob": "0.3.2",
-        "filename-regex": "2.0.1",
-        "is-extglob": "1.0.0",
-        "is-glob": "2.0.1",
-        "kind-of": "3.2.2",
-        "normalize-path": "2.1.1",
-        "object.omit": "2.0.1",
-        "parse-glob": "3.0.4",
-        "regex-cache": "0.4.4"
-      }
-    },
     "mime": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/mime/-/mime-1.4.1.tgz",
@@ -2974,32 +1172,6 @@
       "resolved": "https://registry.npmjs.org/nodemailer/-/nodemailer-4.4.0.tgz",
       "integrity": "sha512-d6E/wK/0Ijoh5v9si5nnkDTIPfz/1sCvwpIdqwoLscJtlNEp0ggysQxffu7tS/Bpv1bMNxl6cjgD3sL4UcYRrQ=="
     },
-    "nodemon": {
-      "version": "1.12.5",
-      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-1.12.5.tgz",
-      "integrity": "sha512-Kwx492h2buPPOie50cht/PdV+jXLqk28l79Nzs1udrFWIXpYHKCskLict1hTrln4ux61azehZcwm8M5McmiuAw==",
-      "dev": true,
-      "requires": {
-        "chokidar": "1.7.0",
-        "debug": "2.6.9",
-        "es6-promise": "3.3.1",
-        "ignore-by-default": "1.0.1",
-        "lodash.defaults": "3.1.2",
-        "minimatch": "3.0.4",
-        "ps-tree": "1.1.0",
-        "touch": "3.1.0",
-        "undefsafe": "0.0.3",
-        "update-notifier": "2.3.0"
-      },
-      "dependencies": {
-        "es6-promise": {
-          "version": "3.3.1",
-          "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-3.3.1.tgz",
-          "integrity": "sha1-oIzd6EzNvzTQJ6FFG8kdS80ophM=",
-          "dev": true
-        }
-      }
-    },
     "nopt": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.1.tgz",
@@ -3009,24 +1181,6 @@
         "osenv": "0.1.4"
       }
     },
-    "normalize-path": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
-      "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
-      "dev": true,
-      "requires": {
-        "remove-trailing-separator": "1.1.0"
-      }
-    },
-    "npm-run-path": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
-      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
-      "dev": true,
-      "requires": {
-        "path-key": "2.0.1"
-      }
-    },
     "npmlog": {
       "version": "4.1.2",
       "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
@@ -3053,21 +1207,6 @@
       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
       "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
     },
-    "object-component": {
-      "version": "0.0.3",
-      "resolved": "https://registry.npmjs.org/object-component/-/object-component-0.0.3.tgz",
-      "integrity": "sha1-8MaapQ78lbhmwYb0AKM3acsvEpE="
-    },
-    "object.omit": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz",
-      "integrity": "sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=",
-      "dev": true,
-      "requires": {
-        "for-own": "0.1.5",
-        "is-extendable": "0.1.1"
-      }
-    },
     "on-finished": {
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
@@ -3108,52 +1247,6 @@
         "os-tmpdir": "1.0.2"
       }
     },
-    "p-finally": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
-      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",
-      "dev": true
-    },
-    "package-json": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/package-json/-/package-json-4.0.1.tgz",
-      "integrity": "sha1-iGmgQBJTZhxMTKPabCEh7VVfXu0=",
-      "dev": true,
-      "requires": {
-        "got": "6.7.1",
-        "registry-auth-token": "3.3.1",
-        "registry-url": "3.1.0",
-        "semver": "5.4.1"
-      }
-    },
-    "parse-glob": {
-      "version": "3.0.4",
-      "resolved": "https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz",
-      "integrity": "sha1-ssN2z7EfNVE7rdFz7wu246OIORw=",
-      "dev": true,
-      "requires": {
-        "glob-base": "0.3.0",
-        "is-dotfile": "1.0.3",
-        "is-extglob": "1.0.0",
-        "is-glob": "2.0.1"
-      }
-    },
-    "parseqs": {
-      "version": "0.0.5",
-      "resolved": "https://registry.npmjs.org/parseqs/-/parseqs-0.0.5.tgz",
-      "integrity": "sha1-1SCKNzjkZ2bikbouoXNoSSGouJ0=",
-      "requires": {
-        "better-assert": "1.0.2"
-      }
-    },
-    "parseuri": {
-      "version": "0.0.5",
-      "resolved": "https://registry.npmjs.org/parseuri/-/parseuri-0.0.5.tgz",
-      "integrity": "sha1-gCBKUNTbt3m/3G6+J3jZDkvOMgo=",
-      "requires": {
-        "better-assert": "1.0.2"
-      }
-    },
     "parseurl": {
       "version": "1.3.2",
       "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.2.tgz",
@@ -3164,55 +1257,16 @@
       "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
       "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
     },
-    "path-is-inside": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
-      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
-      "dev": true
-    },
-    "path-key": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
-      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
-      "dev": true
-    },
     "path-to-regexp": {
       "version": "0.1.7",
       "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
       "integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
     },
-    "pause-stream": {
-      "version": "0.0.11",
-      "resolved": "https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz",
-      "integrity": "sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=",
-      "dev": true,
-      "requires": {
-        "through": "2.3.8"
-      }
-    },
     "performance-now": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
       "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
     },
-    "pify": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
-      "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
-      "dev": true
-    },
-    "prepend-http": {
-      "version": "1.0.4",
-      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-1.0.4.tgz",
-      "integrity": "sha1-1PRWKwzjaW5BrFLQ4ALlemNdxtw=",
-      "dev": true
-    },
-    "preserve": {
-      "version": "0.2.0",
-      "resolved": "https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz",
-      "integrity": "sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks=",
-      "dev": true
-    },
     "process-nextick-args": {
       "version": "1.0.7",
       "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",
@@ -3235,21 +1289,6 @@
         "ipaddr.js": "1.5.2"
       }
     },
-    "ps-tree": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/ps-tree/-/ps-tree-1.1.0.tgz",
-      "integrity": "sha1-tCGyQUDWID8e08dplrRCewjowBQ=",
-      "dev": true,
-      "requires": {
-        "event-stream": "3.3.4"
-      }
-    },
-    "pseudomap": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
-      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
-      "dev": true
-    },
     "punycode": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
@@ -3265,52 +1304,6 @@
       "resolved": "https://registry.npmjs.org/random-bytes/-/random-bytes-1.0.0.tgz",
       "integrity": "sha1-T2ih3Arli9P7lYSMMDJNt11kNgs="
     },
-    "random-number": {
-      "version": "0.0.9",
-      "resolved": "https://registry.npmjs.org/random-number/-/random-number-0.0.9.tgz",
-      "integrity": "sha512-ipG3kRCREi/YQpi2A5QGcvDz1KemohovWmH6qGfboVyyGdR2t/7zQz0vFxrfxpbHQgPPdtVlUDaks3aikD1Ljw=="
-    },
-    "randomatic": {
-      "version": "1.1.7",
-      "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.7.tgz",
-      "integrity": "sha512-D5JUjPyJbaJDkuAazpVnSfVkLlpeO3wDlPROTMLGKG1zMFNFRgrciKo1ltz/AzNTkqE0HzDx655QOL51N06how==",
-      "dev": true,
-      "requires": {
-        "is-number": "3.0.0",
-        "kind-of": "4.0.0"
-      },
-      "dependencies": {
-        "is-number": {
-          "version": "3.0.0",
-          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
-          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
-          "dev": true,
-          "requires": {
-            "kind-of": "3.2.2"
-          },
-          "dependencies": {
-            "kind-of": {
-              "version": "3.2.2",
-              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
-              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
-              "dev": true,
-              "requires": {
-                "is-buffer": "1.1.6"
-              }
-            }
-          }
-        },
-        "kind-of": {
-          "version": "4.0.0",
-          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
-          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
-          "dev": true,
-          "requires": {
-            "is-buffer": "1.1.6"
-          }
-        }
-      }
-    },
     "randomstring": {
       "version": "1.1.5",
       "resolved": "https://registry.npmjs.org/randomstring/-/randomstring-1.1.5.tgz",
@@ -3367,69 +1360,11 @@
         "util-deprecate": "1.0.2"
       }
     },
-    "readdirp": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.1.0.tgz",
-      "integrity": "sha1-TtCtBg3zBzMAxIRANz9y0cxkLXg=",
-      "dev": true,
-      "requires": {
-        "graceful-fs": "4.1.11",
-        "minimatch": "3.0.4",
-        "readable-stream": "2.2.7",
-        "set-immediate-shim": "1.0.1"
-      }
-    },
-    "regex-cache": {
-      "version": "0.4.4",
-      "resolved": "https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.4.tgz",
-      "integrity": "sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==",
-      "dev": true,
-      "requires": {
-        "is-equal-shallow": "0.1.3"
-      }
-    },
     "regexp-clone": {
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/regexp-clone/-/regexp-clone-0.0.1.tgz",
       "integrity": "sha1-p8LgmJH9vzj7sQ03b7cwA+aKxYk="
     },
-    "registry-auth-token": {
-      "version": "3.3.1",
-      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-3.3.1.tgz",
-      "integrity": "sha1-+w0yie4Nmtosu1KvXf5mywcNMAY=",
-      "dev": true,
-      "requires": {
-        "rc": "1.2.2",
-        "safe-buffer": "5.1.1"
-      }
-    },
-    "registry-url": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-3.1.0.tgz",
-      "integrity": "sha1-PU74cPc93h138M+aOBQyRE4XSUI=",
-      "dev": true,
-      "requires": {
-        "rc": "1.2.2"
-      }
-    },
-    "remove-trailing-separator": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
-      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8=",
-      "dev": true
-    },
-    "repeat-element": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.2.tgz",
-      "integrity": "sha1-7wiaF40Ug7quTZPrmLT55OEdmQo=",
-      "dev": true
-    },
-    "repeat-string": {
-      "version": "1.6.1",
-      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
-      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
-      "dev": true
-    },
     "request": {
       "version": "2.83.0",
       "resolved": "https://registry.npmjs.org/request/-/request-2.83.0.tgz",
@@ -3491,15 +1426,6 @@
       "resolved": "https://registry.npmjs.org/semver/-/semver-5.4.1.tgz",
       "integrity": "sha512-WfG/X9+oATh81XtllIo/I8gOiY9EXRdv1cQdyykeXK17YcUW3EXUAi2To4pcH6nZtJPr7ZOpM5OMyWJZm+8Rsg=="
     },
-    "semver-diff": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-2.1.0.tgz",
-      "integrity": "sha1-S7uEN8jTfksM8aaP1ybsbWRdbTY=",
-      "dev": true,
-      "requires": {
-        "semver": "5.4.1"
-      }
-    },
     "send": {
       "version": "0.16.1",
       "resolved": "https://registry.npmjs.org/send/-/send-0.16.1.tgz",
@@ -3548,32 +1474,11 @@
       "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
       "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc="
     },
-    "set-immediate-shim": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/set-immediate-shim/-/set-immediate-shim-1.0.1.tgz",
-      "integrity": "sha1-SysbJ+uAip+NzEgaWOXlb1mfP2E=",
-      "dev": true
-    },
     "setprototypeof": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
       "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ=="
     },
-    "shebang-command": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
-      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
-      "dev": true,
-      "requires": {
-        "shebang-regex": "1.0.0"
-      }
-    },
-    "shebang-regex": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
-      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
-      "dev": true
-    },
     "signal-exit": {
       "version": "3.0.2",
       "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
@@ -3592,70 +1497,6 @@
         "hoek": "4.2.0"
       }
     },
-    "socket.io": {
-      "version": "2.0.4",
-      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-2.0.4.tgz",
-      "integrity": "sha1-waRZDO/4fs8TxyZS8Eb3FrKeYBQ=",
-      "requires": {
-        "debug": "2.6.9",
-        "engine.io": "3.1.4",
-        "socket.io-adapter": "1.1.1",
-        "socket.io-client": "2.0.4",
-        "socket.io-parser": "3.1.2"
-      }
-    },
-    "socket.io-adapter": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-1.1.1.tgz",
-      "integrity": "sha1-KoBeihTWNyEk3ZFZrUUC+MsH8Gs="
-    },
-    "socket.io-client": {
-      "version": "2.0.4",
-      "resolved": "https://registry.npmjs.org/socket.io-client/-/socket.io-client-2.0.4.tgz",
-      "integrity": "sha1-CRilUkBtxeVAs4Dc2Xr8SmQzL44=",
-      "requires": {
-        "backo2": "1.0.2",
-        "base64-arraybuffer": "0.1.5",
-        "component-bind": "1.0.0",
-        "component-emitter": "1.2.1",
-        "debug": "2.6.9",
-        "engine.io-client": "3.1.4",
-        "has-cors": "1.1.0",
-        "indexof": "0.0.1",
-        "object-component": "0.0.3",
-        "parseqs": "0.0.5",
-        "parseuri": "0.0.5",
-        "socket.io-parser": "3.1.2",
-        "to-array": "0.1.4"
-      }
-    },
-    "socket.io-parser": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-3.1.2.tgz",
-      "integrity": "sha1-28IoIVH8T6675Aru3Ady66YZ9/I=",
-      "requires": {
-        "component-emitter": "1.2.1",
-        "debug": "2.6.9",
-        "has-binary2": "1.0.2",
-        "isarray": "2.0.1"
-      },
-      "dependencies": {
-        "isarray": {
-          "version": "2.0.1",
-          "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.1.tgz",
-          "integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4="
-        }
-      }
-    },
-    "split": {
-      "version": "0.3.3",
-      "resolved": "https://registry.npmjs.org/split/-/split-0.3.3.tgz",
-      "integrity": "sha1-zQ7qXmOiEd//frDwkcQTPi0N0o8=",
-      "dev": true,
-      "requires": {
-        "through": "2.3.8"
-      }
-    },
     "sshpk": {
       "version": "1.13.1",
       "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.13.1.tgz",
@@ -3681,15 +1522,6 @@
       "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz",
       "integrity": "sha1-+vUbnrdKrvOzrPStX2Gr8ky3uT4="
     },
-    "stream-combiner": {
-      "version": "0.0.4",
-      "resolved": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz",
-      "integrity": "sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=",
-      "dev": true,
-      "requires": {
-        "duplexer": "0.1.1"
-      }
-    },
     "streamsearch": {
       "version": "0.1.2",
       "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-0.1.2.tgz",
@@ -3726,37 +1558,11 @@
         "ansi-regex": "2.1.1"
       }
     },
-    "strip-eof": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
-      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
-      "dev": true
-    },
     "strip-json-comments": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
       "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="
     },
-    "stripe": {
-      "version": "5.4.0",
-      "resolved": "https://registry.npmjs.org/stripe/-/stripe-5.4.0.tgz",
-      "integrity": "sha512-VCDFp4oQu1uOcOLHIwRIznH8ikLJcpDsHahWN48V/QuV6y2Bm281cq5wnkjqv+LPdUpqXVp9pjlb+SfN6dnyZg==",
-      "requires": {
-        "bluebird": "3.5.1",
-        "lodash.isplainobject": "4.0.6",
-        "qs": "6.5.1",
-        "safe-buffer": "5.1.1"
-      }
-    },
-    "supports-color": {
-      "version": "4.5.0",
-      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-4.5.0.tgz",
-      "integrity": "sha1-vnoN5ITexcXN34s9WRJQRJEvY1s=",
-      "dev": true,
-      "requires": {
-        "has-flag": "2.0.0"
-      }
-    },
     "tar": {
       "version": "2.2.1",
       "resolved": "https://registry.npmjs.org/tar/-/tar-2.2.1.tgz",
@@ -3782,52 +1588,6 @@
         "uid-number": "0.0.6"
       }
     },
-    "term-size": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/term-size/-/term-size-1.2.0.tgz",
-      "integrity": "sha1-RYuDiH8oj8Vtb/+/rSYuJmOO+mk=",
-      "dev": true,
-      "requires": {
-        "execa": "0.7.0"
-      }
-    },
-    "through": {
-      "version": "2.3.8",
-      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
-      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
-      "dev": true
-    },
-    "timed-out": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
-      "integrity": "sha1-8y6srFoXW+ol1/q1Zas+2HQe9W8=",
-      "dev": true
-    },
-    "to-array": {
-      "version": "0.1.4",
-      "resolved": "https://registry.npmjs.org/to-array/-/to-array-0.1.4.tgz",
-      "integrity": "sha1-F+bBH3PdTz10zaek/zI46a2b+JA="
-    },
-    "touch": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
-      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
-      "dev": true,
-      "requires": {
-        "nopt": "1.0.10"
-      },
-      "dependencies": {
-        "nopt": {
-          "version": "1.0.10",
-          "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
-          "integrity": "sha1-bd0hvSoxQXuScn3Vhfim83YI6+4=",
-          "dev": true,
-          "requires": {
-            "abbrev": "1.1.1"
-          }
-        }
-      }
-    },
     "tough-cookie": {
       "version": "2.3.3",
       "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.3.tgz",
@@ -3877,63 +1637,11 @@
         "random-bytes": "1.0.0"
       }
     },
-    "ultron": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/ultron/-/ultron-1.1.1.tgz",
-      "integrity": "sha512-UIEXBNeYmKptWH6z8ZnqTeS8fV74zG0/eRU9VGkpzz+LIJNs8W/zM/L+7ctCkRrgbNnnR0xxw4bKOr0cW0N0Og=="
-    },
-    "undefsafe": {
-      "version": "0.0.3",
-      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-0.0.3.tgz",
-      "integrity": "sha1-7Mo6A+VrmvFzhbqsgSrIO5lKli8=",
-      "dev": true
-    },
-    "unique-string": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-1.0.0.tgz",
-      "integrity": "sha1-nhBXzKhRq7kzmPizOuGHuZyuwRo=",
-      "dev": true,
-      "requires": {
-        "crypto-random-string": "1.0.0"
-      }
-    },
     "unpipe": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
       "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw="
     },
-    "unzip-response": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/unzip-response/-/unzip-response-2.0.1.tgz",
-      "integrity": "sha1-0vD3N9FrBhXnKmk17QQhRXLVb5c=",
-      "dev": true
-    },
-    "update-notifier": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-2.3.0.tgz",
-      "integrity": "sha1-TognpruRUUCrCTVZ1wFOPruDdFE=",
-      "dev": true,
-      "requires": {
-        "boxen": "1.3.0",
-        "chalk": "2.3.0",
-        "configstore": "3.1.1",
-        "import-lazy": "2.1.0",
-        "is-installed-globally": "0.1.0",
-        "is-npm": "1.0.0",
-        "latest-version": "3.1.0",
-        "semver-diff": "2.1.0",
-        "xdg-basedir": "3.0.0"
-      }
-    },
-    "url-parse-lax": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-1.0.0.tgz",
-      "integrity": "sha1-evjzA2Rem9eaJy56FKxovAYJ2nM=",
-      "dev": true,
-      "requires": {
-        "prepend-http": "1.0.4"
-      }
-    },
     "util-deprecate": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
@@ -3949,12 +1657,6 @@
       "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.1.0.tgz",
       "integrity": "sha512-DIWtzUkw04M4k3bf1IcpS2tngXEL26YUD2M0tMDUpnUrz2hgzUBlD55a4FjdLGPvfHxS6uluGWvaVEqgBcVa+g=="
     },
-    "uws": {
-      "version": "0.14.5",
-      "resolved": "https://registry.npmjs.org/uws/-/uws-0.14.5.tgz",
-      "integrity": "sha1-Z6rzPEaypYel9mZtAPdpEyjxSdw=",
-      "optional": true
-    },
     "vary": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
@@ -3970,15 +1672,6 @@
         "extsprintf": "1.3.0"
       }
     },
-    "which": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/which/-/which-1.3.0.tgz",
-      "integrity": "sha512-xcJpopdamTuY5duC/KnTTNBraPK54YwpenP4lzxU8H91GudWpFv38u0CKjclE1Wi2EH2EDz5LRcHcKbCIzqGyg==",
-      "dev": true,
-      "requires": {
-        "isexe": "2.0.0"
-      }
-    },
     "wide-align": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.2.tgz",
@@ -3987,100 +1680,15 @@
         "string-width": "1.0.2"
       }
     },
-    "widest-line": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-2.0.0.tgz",
-      "integrity": "sha1-AUKk6KJD+IgsAjOqDgKBqnYVInM=",
-      "dev": true,
-      "requires": {
-        "string-width": "2.1.1"
-      },
-      "dependencies": {
-        "ansi-regex": {
-          "version": "3.0.0",
-          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
-          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
-          "dev": true
-        },
-        "is-fullwidth-code-point": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
-          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
-          "dev": true
-        },
-        "string-width": {
-          "version": "2.1.1",
-          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
-          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
-          "dev": true,
-          "requires": {
-            "is-fullwidth-code-point": "2.0.0",
-            "strip-ansi": "4.0.0"
-          }
-        },
-        "strip-ansi": {
-          "version": "4.0.0",
-          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
-          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
-          "dev": true,
-          "requires": {
-            "ansi-regex": "3.0.0"
-          }
-        }
-      }
-    },
     "wrappy": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
       "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
     },
-    "write-file-atomic": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.3.0.tgz",
-      "integrity": "sha512-xuPeK4OdjWqtfi59ylvVL0Yn35SF3zgcAcv7rBPFHVaEapaDr4GdGgm3j7ckTwH9wHL7fGmgfAnb0+THrHb8tA==",
-      "dev": true,
-      "requires": {
-        "graceful-fs": "4.1.11",
-        "imurmurhash": "0.1.4",
-        "signal-exit": "3.0.2"
-      }
-    },
-    "ws": {
-      "version": "3.3.3",
-      "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
-      "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
-      "requires": {
-        "async-limiter": "1.0.0",
-        "safe-buffer": "5.1.1",
-        "ultron": "1.1.1"
-      }
-    },
-    "xdg-basedir": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-3.0.0.tgz",
-      "integrity": "sha1-SWsswQnsqNus/i3HK2A8F8WHCtQ=",
-      "dev": true
-    },
-    "xmlhttprequest-ssl": {
-      "version": "1.5.4",
-      "resolved": "https://registry.npmjs.org/xmlhttprequest-ssl/-/xmlhttprequest-ssl-1.5.4.tgz",
-      "integrity": "sha1-BPVgkVcks4kIhxXMDteBPpZ3v1c="
-    },
     "xtend": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",
       "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68="
-    },
-    "yallist": {
-      "version": "2.1.2",
-      "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
-      "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
-      "dev": true
-    },
-    "yeast": {
-      "version": "0.1.2",
-      "resolved": "https://registry.npmjs.org/yeast/-/yeast-0.1.2.tgz",
-      "integrity": "sha1-AI4G2AlDIMNy28L47XagymyKxBk="
     }
   }
 }
diff --git a/package.json b/package.json
index 39ee686..c1be5aa 100644
--- a/package.json
+++ b/package.json
@@ -4,7 +4,7 @@
   "description": "Dating And Rating App",
   "main": "index.js",
   "scripts": {
-    "start": "nodemon ./bin/www"
+    "start": "node ./bin/www"
   },
   "repository": {
     "type": "git",
@@ -27,23 +27,16 @@
     "express": "^4.16.2",
     "express-session": "^1.15.6",
     "geolib": "^2.0.24",
-    "http": "0.0.0",
     "jsonwebtoken": "^8.1.0",
     "moment": "^2.19.2",
-    "mongoose": "^4.13.4",
+    "mongoose": "^4.13.5",
     "mongoose-createdat-updatedat": "^1.1.0",
     "morgan": "^1.9.0",
     "multer": "^1.3.0",
     "node-fetch": "^1.7.3",
     "nodemailer": "^4.4.0",
     "promise": "^8.0.1",
-    "random-number": "0.0.9",
     "randomstring": "^1.1.5",
-    "serve-favicon": "^2.4.5",
-    "socket.io": "^2.0.4",
-    "stripe": "^5.4.0"
-  },
-  "devDependencies": {
-    "nodemon": "^1.12.5"
+    "serve-favicon": "^2.4.5"
   }
 }
diff --git a/routes/user/admin/index.js b/routes/user/admin/index.js
index b5dccdc..58cffc3 100644
--- a/routes/user/admin/index.js
+++ b/routes/user/admin/index.js
@@ -8,10 +8,12 @@ const session = require('express-session');
 const CONSTANTS = require(appRoot + '/Constants/constant');
 var jwt = require('jsonwebtoken');
 var jwtAuth = require(appRoot + '/libs/jwtAuth');
-var DnrAdminUser = require(appRoot + '/models/DnrMasterAdmin');
+var DnrAdminUser = require(appRoot + '/models/dnrMasterAdmin');
 var Token = require(appRoot + '/models/dnr_token');
 var User = require(appRoot + '/models/dnr_users');
 var Dates = require(appRoot + '/models/dnr_dates');
+var Contacts = require(appRoot + '/models/dnrContacts');
+var Contents = require(appRoot + '/models/dnrContents');
 
 // Dnr Admin Singup
 // created by - AniMesh;
@@ -85,8 +87,10 @@ router.post('/admin_signup', function(req, res, next) {
 // updated on - 20th Dec 2017;
 router.post('/admin_login', function(req, res, next) {
     var sess = req.session;
+    // console.log(req.body)
     var email = req.body.username;
     var password = req.body.password;
+    console.log(email);
     if (email != null) {
         DnrAdminUser.findOne({
             'adminEmail': email
@@ -241,7 +245,7 @@ router.get('/getAllUsers', function(req, res, next) {
 router.get('/getEachUser/:id',function(req,res,next) {
     var token = req.headers['accesstoken']
     jwtAuth.checkAuth(token).then(function(result) {
-        User.findById(req.params.id, function(err,result){
+        User.findOne({_id:req.params.id}, function(err,result){
             if (result) {
                 res.json({
                     success: true,
@@ -265,39 +269,6 @@ router.get('/getEachUser/:id',function(req,res,next) {
         return
     })
 })
-//edit admin profile
-router.get('/editAdminProfile',function(req,res){
-
-})
-// delete users
-// created on - 10th Jan 2017;
-router.get('/removeEachUser/:id',function(req,res,next){
-    var token = req.headers['accesstoken']
-    jwtAuth.checkAuth(token).then(function(result) {
-        User.findByIdAndRemove(req.params.id, function(err,result){
-            if (result) {
-                res.json({
-                    success: true,
-                    msg: "User data successfully Deleted",
-                    data: result
-                })
-                return            
-            } else{
-                res.json({
-                    success: false,
-                    msg: "Please Enter valid Id"
-                })
-                return
-            };
-        })
-    }).catch(function(error) {
-        res.json({
-            success: false,
-            msg: "Authentication failed"
-        })
-        return
-    })
-})
 //get latest 10 users
 //created on : 16th jan 2018
 router.get('/getDashBoardData',function(req,res,next) {
@@ -331,5 +302,181 @@ router.get('/getDashBoardData',function(req,res,next) {
         return
     })
 })
+// Dnr Contacts
+// created by - AniMesh;
+// created on - 24th April 2018;
+router.post('/addContacts', function(req, res, next) {
+    var fullName  = req.body.fullName;
+    var email   = req.body.email;
+    var phoneNumber      = req.body.phoneNumber;
+    var subject   = req.body.subject;
+    var textMessage   = req.body.textMessage;
+    newContacts = new Contacts({
+        fullName: fullName,
+        email: email.toLowerCase(),
+        phoneNumber: phoneNumber,
+        subject: subject,
+        textMessage: textMessage
+    });    
+    newContacts.save(function(err, data) {
+        console.log(err)
+        if (err) {
+            res.json({
+                success: false,
+                msg: 'Please fill all fields'
+            });
+        } else {
+            res.json({
+                success: true,
+                msg: 'Successful add your information',
+                data: data
+            });
+            return;
+        }
+    });
+})
+// Dnr Contacts get
+// created by - AniMesh;
+// created on - 24th April 2018;
+router.get('/getContacts', function(req, res, next) {
+    Contacts.find().then(function(contactData) {
+        if (contactData) {
+            res.json({
+                success: true,
+                msg: "Fetched All Contacts Successfully",
+                data: contactData
+            });
+        } else {
+            res.json({
+                success: false,
+                msg: "Failed to get Contacts"
+            })
+        }
+    }).catch(function(error) {
+        console.log(error);
+        res.json({
+            success: false,
+            msg: "Please enter valid params"
+        })
+    })
+})
+// Dnr Contacts get Each
+// created by - AniMesh;
+// created on - 24th April 2018;
+router.get('/getContacts/:id', function(req, res, next) {
+    Contacts.findOne({_id:req.params.id}, function(err,result){
+        if (result) {
+            res.json({
+                success: true,
+                msg: "Fetched Each Contact Successfully",
+                data: result
+            })
+            return            
+        } else{
+            res.json({
+                success: false,
+                msg: "Please Enter valid Id"
+            })
+            return
+        };
+    })
+})
+// Dnr Contents
+// created by - AniMesh;
+// created on - 27th April 2018;
+router.post('/addContent', function(req, res, next) {
+    Contents.create({ 
+        title: req.body.title,
+        description: req.body.description,
+        conType:req.body.conType
+    }, function (err, result) {
+        if (err) {
+            res.json({
+                success: false,
+                msg: 'Content are not inserted'
+            });
+        } else {
+            res.json({
+                success: true,
+                msg: 'Successfully inserted new Content',
+                data: result
+            });
+            return;
+        }
+    })
+})
+// Dnr Contents get
+// created by - AniMesh;
+// created on - 24th April 2018;
+router.get('/getContents', function(req, res, next) {
+    Contents.find().then(function(contentData) {
+        if (contentData) {
+            res.json({
+                success: true,
+                msg: "Fetched All Contents Successfully",
+                data: contentData
+            });
+        } else {
+            res.json({
+                success: false,
+                msg: "Failed to get Contents"
+            })
+        }
+    }).catch(function(error) {
+        console.log(error);
+        res.json({
+            success: false,
+            msg: "Please enter valid params"
+        })
+    })
+})
+// Dnr Contents Edit
+// created by - AniMesh;
+// created on - 27th April 2018;
+router.post('/editContents', function(req,res,next){
+    Contents.findOneAndUpdate({
+        _id: req.body.ID
+        },{
+            $set:{
+                description: req.body.description
+            }
+        },{new:true}, function(err, result) {
+        if (result) {
+            res.json({
+                success: true,
+                msg: "Each Content data Updated successfully",
+                data: result
+            });
+            return;            
+        } else{
+            res.json({
+                success: false,
+                msg: "Please Enter valid id"
+            });
+            return;
+        };
+    })
+})
+// Dnr Content get Each
+// created by - AniMesh;
+// created on - 27th April 2018;
+router.get('/getContents/:id', function(req, res, next) {
+    Contents.findOne({_id:req.params.id}, function(err,result){
+        if (result) {
+            res.json({
+                success: true,
+                msg: "Fetched Each Contents Successfully",
+                data: result
+            })
+            return            
+        } else{
+            res.json({
+                success: false,
+                msg: "Please Enter valid Id"
+            })
+            return
+        };
+    })
+})
 
 module.exports = router;
\ No newline at end of file
diff --git a/routes/user/admin/packages.js b/routes/user/admin/packages.js
index 896c922..8df99d3 100644
--- a/routes/user/admin/packages.js
+++ b/routes/user/admin/packages.js
@@ -4,31 +4,19 @@ var config = require(appRoot + '/libs/config');
 const CONSTANTS = require(appRoot + '/Constants/constant');
 var jwt = require('jsonwebtoken');
 var jwtAuth = require(appRoot + '/libs/jwtAuth');
-var stripePlans = require(appRoot + '/libs/stripe/plan');
 var Packages = require(appRoot + '/models/dnrAdminPackages');
-
-var rn = require('random-number');
-
-//add packages
+//add terms and conditions
 //created on : 15th Jan 2018
-//updated on : 23th Jan 2018
+//updated on : --th Jan 2018
 router.post('/addPackages', function(req,res,next){
     var token = req.headers['accesstoken'];
     jwtAuth.checkAuth(token).then(function(result) {
-        var options = {
-            min:  0, 
-            max:  99, 
-            integer: true
-        }
-        //   rn(options)
-        reqData = {
-            name: req.body.name,
-            amount: req.body.amount,
-            interval: req.body.interval,
-            currency: req.body.currency,
-            id: rn(options)
-        }
-        stripePlans.create_plan(reqData,function(err, result) {
+        Packages.create({ 
+            title: req.body.title,
+            tag: req.body.tag,
+            price: req.body.price,
+            duration: req.body.duration
+        }, function (err, result) {
             if (err) {
                 res.json({
                     success: false,
@@ -42,10 +30,8 @@ router.post('/addPackages', function(req,res,next){
                 });
                 return;
             }
-        });
-        //stripe end
+        })
     }).catch(function(error) {
-        console.log(error)
         res.json({
             success: false,
             msg: "Authentication failed"
@@ -55,17 +41,17 @@ router.post('/addPackages', function(req,res,next){
 })
 
 // Dnr get all Packages
-// created on - 15th Jan 2018;
-// updated on : 23th Jan 2018
+// created on - 15th Jan 2017;
 router.get('/getAllPackages', function(req, res, next) {
     var token = req.headers['accesstoken'];
     jwtAuth.checkAuth(token).then(function(result) {
-        stripePlans.list_plans(function(err, result) {
-            if (result) {
+        
+        Packages.find().then(function(Packagesdata) {
+            if (Packagesdata) {
                 res.json({
                     success: true,
                     msg: "Fetched All Packages Record Successfully",
-                    data: result.data
+                    data: Packagesdata
                 });
                 return;
             } else {
@@ -75,7 +61,14 @@ router.get('/getAllPackages', function(req, res, next) {
                 });
                 return;
             }
-        });
+        }).catch(function(error) {
+            console.log(error);
+            res.json({
+                success: false,
+                msg: "Something went wrong"
+            });
+            return;
+        })
     }).catch(function(error) {
         res.json({
             success: false,
@@ -86,13 +79,11 @@ router.get('/getAllPackages', function(req, res, next) {
 })
 
 // Dnr get Each Packages 
-// created on - 15th Jan 2018;
-// updated on : 23th Jan 2018
+// created on - 15th Jan 2017;
 router.get('/getEachPackage/:id',function(req,res,next) {
     var token = req.headers['accesstoken']
     jwtAuth.checkAuth(token).then(function(result) {
-
-        stripePlans.retrieve_plan(req.params.id,function(err, result) {
+        Packages.findById(req.params.id, function(err,result){
             if (result) {
                 res.json({
                     success: true,
@@ -118,17 +109,22 @@ router.get('/getEachPackage/:id',function(req,res,next) {
 })
 
 // edit Packages
-// created on - 15th Jan 2018;
-// updated on : 23th Jan 2018
+// created on - 15th Jan 2017;
+// updated on - --th Jan 2017;
 router.post('/editPackages',function(req,res){
     var token = req.headers['accesstoken']
     jwtAuth.checkAuth(token).then(function(result){
-        id = req.body.ID
-
-        reqData = {
-            name: req.body.name
-        }
-        stripePlans.update_plan(id, reqData, function(err, result) {
+        console.log(req.body)
+        Packages.findOneAndUpdate({
+            _id: req.body.ID
+        },{
+                $set:{
+                    title: req.body.title,
+                    tag: req.body.tag,
+                    price: req.body.price,
+                    duration: req.body.duration
+                }
+            },{new:true}, function(err, result) {
             if (result) {
                 res.json({
                     success: true,
@@ -144,7 +140,6 @@ router.post('/editPackages',function(req,res){
                 return;
             };
         })
-
     }).catch(function(error){
         req.json({
           success:false,
@@ -156,13 +151,11 @@ router.post('/editPackages',function(req,res){
 })
 
 // delete Packages
-// created on - 15th Jan 2018;
-// updated on : 23th Jan 2018
+// created on - 15th Jan 2017;
 router.get('/removePackages/:id',function(req,res,next){
     var token = req.headers['accesstoken']
     jwtAuth.checkAuth(token).then(function(result) {
-
-        stripePlans.delete_plan(req.params.id, function(err, result) {
+        Packages.findByIdAndRemove(req.params.id, function(err,result){
             if (result) {
                 res.json({
                     success: true,
@@ -186,6 +179,5 @@ router.get('/removePackages/:id',function(req,res,next){
         return
     })
 })
-
 /***************EOF************/
 module.exports = router;
diff --git a/routes/user/index.js b/routes/user/index.js
index 094646a..0602fa0 100644
--- a/routes/user/index.js
+++ b/routes/user/index.js
@@ -1,6 +1,15 @@
 var express = require('express');
 var router = express.Router();
+var rating = require(appRoot + '/models/dnr_rating');
+var jwt = require('jsonwebtoken');
+var jwtAuth = require(appRoot + '/libs/jwtAuth');
+var async = require("async");
+var ListItems = require(appRoot + '/models/dnr_list');
+var User = require(appRoot + '/models/dnr_users');
+var _ = require('lodash');
+var email_msgs = require(appRoot + '/message.json');
 
+var config = require(appRoot + '/libs/config');
 /* GET home page. */
 router.get('/', function(req, res, next) {
   // res.render('index', { title: 'Express' });
@@ -12,4 +21,670 @@ router.get('/', function(req, res, next) {
     return;
 });
 
+//add rating
+router.post('/addRatings',function(req,res,next){
+    var token = req.headers['accesstoken'];
+    jwtAuth.checkAuth(token).then(function(result) {
+        rating.update({
+            "rated_by" : req.body.rated_by,
+        },{
+            $set : {
+                rated_to : req.body.rated_to,
+                is_rated : req.body.is_rated,
+                ratings : req.body.ratings
+            }
+        },{upsert:true}).then(function(ratingData) {
+
+             User.findOne({
+          '_id' : req.body.rated_to
+          },{email:1}).then(function(userData){
+
+          var text = 'Hey There \n\n'+
+                                       email_msgs.rating.rating_title;
+            var subject = email_msgs.rating.rating_body;
+            
+            config.sendMail(userData.email.toLowerCase(), text, subject).then(function(error,result) {
+                if (error) {
+                    console.log(error);
+                }
+
+            });
+             });
+            res.json({
+                success:true,
+                msg:"rating Data Submited successfully",
+                data:ratingData
+            })
+            return
+        }).catch(function(error) {
+            console.log(error)
+            res.json({
+                'success': false,
+                'msg': "Failed to Add the ratingData"
+            })
+            return
+        })
+    }).catch(function(error) {
+        res.json({
+            success: false,
+            msg: "Authentication failed",
+            authStatus : 1
+        })
+    })
+
+})
+//MyRatings
+router.post('/myRatings',function(req,res,next){
+
+    var token = req.headers['accesstoken'];
+    jwtAuth.checkAuth(token).then(function(result) {
+    User.findOne({
+        '_id' : req.body.rated_to
+    },{rating:1}).then(function(userRatingTopics){
+       
+        rating.find({
+            "rated_to":req.body.rated_to
+        },{ratings:1}).then(function(ratingsGivenByUsers){
+
+        ListItems.find({},{ratings:1,_id:1}).then(function(ratingTopics){
+         //   console.log('myRatings',ratingTopics,ratingsGivenByUsers,userRatingTopics);
+            let arrAdv =[], newArr =[], newArr1=[];            
+            newArr[0] ={},newArr1[0]={};  
+
+            let userInterest = userRatingTopics.rating;
+            let userRating = userRatingTopics.rating;  
+            
+            let array = [];
+            
+            let ratings = ratingTopics[0].ratings;
+            let listId = ratingTopics[0]._id;
+            if(ratings.length>0){
+            
+            async.forEach(ratings,function (rt,cb1) {
+                array[rt] =[];
+                array[rt][0] = {};
+                array[rt][1] =0;
+                array[rt][2] =0;
+                if(userRatingTopics){                  
+                  
+                    if(userRating.indexOf(rt)>-1){ 
+
+                        if(ratingsGivenByUsers.length>0){
+                          async.forEach(ratingsGivenByUsers,function (rgu,cb3) {
+                              
+                              let rating = rgu.ratings;
+                              let keys = Object.keys(rating);  
+                              // check rating topic in already given topics
+                              if(keys.indexOf(rt)>-1){
+                             
+                                  let class1='fa fa-star-o border';
+                                  let class2='fa fa-star-o border';
+                                  let class3='fa fa-star-o border';
+                                  let class4='fa fa-star-o border';
+                                  let class5='fa fa-star-o border';
+                                  array[rt][1] += parseInt(rating[rt]);
+                                  array[rt][2] +=1;
+                                  let avg = 0;
+                                  avg = array[rt][1]/array[rt][2];
+                                  if(isNaN(avg))
+                                          avg = 0;
+                                  if(avg==0)
+                                    {
+                                      class1=class2=class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=0.1 && avg<=0.9)
+                                    {
+                                      class1 = 'fa fa-star-half-o checked';
+                                      class2=class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==1)
+                                    {
+                                      class1 = 'fa fa-star checked';
+                                      class2=class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=1.1 && avg<=1.9)
+                                    {
+                                      class1 = 'fa fa-star checked';
+                                      class2 = 'fa fa-star-half-o checked';
+                                      class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==2)
+                                    {
+                                      class1 =class2= 'fa fa-star checked';
+                                      class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=2.1 && avg<=2.9)
+                                    {
+                                      class1 =class2= 'fa fa-star checked';
+                                      class3 = 'fa fa-star-half-o checked';
+                                      class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==3)
+                                    {
+                                      class1 =class2=class3= 'fa fa-star checked';
+                                      class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=3.1 && avg<=3.9)
+                                    {
+                                      class1 =class2=class3= 'fa fa-star checked';
+                                      class4= 'fa fa-star-half checked';
+                                      class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==4)
+                                    {
+                                      class1 =class2=class3=class4= 'fa fa-star checked';
+                                      class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=4.1 && avg<=4.9)
+                                    {
+                                      class1 = class2=class3=class4= 'fa fa-star checked';
+                                      class5 = 'fa fa-star-half-o checked';
+                                      
+                                    }
+                                    else if(avg==5)
+                                    {
+                                      class1=class2=class3=class4=class5='fa fa-star checked';
+                                    }
+
+                                
+
+                                  let json = {
+                                      name  : rt,
+                                      class5 : class5,
+                                      class4 : class4,
+                                      class3  :class3,
+                                      class2 : class2,
+                                      class1 : class1,
+                                      value : Math.round(avg * 10) / 10,
+                                      sum : array[rt][1],
+                                      isSelect  : true
+                                  }                               
+                                  array[rt][0] = json;
+                                  cb3();
+
+                              } else {
+                                
+                                  array[rt][1] += parseInt(rating[rt]);
+                                  array[rt][2] +=1;
+                                  let avg = 0;
+                                  avg = array[rt][1]/array[rt][2];
+                                  if(isNaN(avg))
+                                          avg = 0;
+                                  let class1='fa fa-star-o border';
+                                  let class2='fa fa-star-o border';
+                                  let class3='fa fa-star-o border';
+                                  let class4='fa fa-star-o border';
+                                  let class5='fa fa-star-o border'; 
+                                  if(avg==0)
+                                    {
+                                      class1=class2=class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=0.1 && avg<=0.9)
+                                    {
+                                      class1 = 'fa fa-star-half-o checked';
+                                      class2=class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==1)
+                                    {
+                                      class1 = 'fa fa-star checked';
+                                      class2=class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=1.1 && avg<=1.9)
+                                    {
+                                      class1 = 'fa fa-star checked';
+                                      class2 = 'fa fa-star-half-o checked';
+                                      class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==2)
+                                    {
+                                      class1 =class2= 'fa fa-star checked';
+                                      class3=class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=2.1 && avg<=2.9)
+                                    {
+                                      class1 =class2= 'fa fa-star checked';
+                                      class3 = 'fa fa-star-half-o checked';
+                                      class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==3)
+                                    {
+                                      class1 =class2=class3= 'fa fa-star checked';
+                                      class4=class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=3.1 && avg<=3.9)
+                                    {
+                                      class1 =class2=class3= 'fa fa-star checked';
+                                      class4= 'fa fa-star-half checked';
+                                      class5='fa fa-star-o border';
+                                    }
+                                    else if(avg==4)
+                                    {
+                                      class1 =class2=class3=class4= 'fa fa-star checked';
+                                      class5='fa fa-star-o border';
+                                    }
+                                    else if(avg>=4.1 && avg<=4.9)
+                                    {
+                                      class1 = class2=class3=class4= 'fa fa-star checked';
+                                      class5 = 'fa fa-star-half-o checked';                                      
+                                    }
+                                    else if(avg==5)
+                                    {
+                                      class1=class2=class3=class4=class5='fa fa-star checked';
+                                    }
+                         
+                              let json = {
+                                  name  : rt,
+                                  class5 : class5,
+                                  class4 : class4,
+                                  class3  :class3,
+                                  class2 : class2,
+                                  class1 : class1,
+                                  value : Math.round(avg * 10) / 10,
+                                  sum : array[rt][1],
+                                  isSelect : true
+                              }
+                              array[rt][0] = json;
+                                    cb3();
+                              }
+
+                          },function(){
+                              cb1();
+                          });
+                      }
+                      else
+                      {
+                       
+                          let class1='fa fa-star-o border';
+                            let class2='fa fa-star-o border';
+                            let class3='fa fa-star-o border';
+                            let class4='fa fa-star-o border';
+                            let class5='fa fa-star-o border';                        
+                            let json = {
+                                name  : rt,
+                                class5 : class5,
+                                class4 : class4,
+                                class3  :class3,
+                                class2 : class2,
+                                class1 : class1,
+                                value : 0,
+                                sum : array[rt][1],
+                                isSelect : true
+                            }
+                            array[rt][0] = json;                        
+                          cb1();
+                      }
+
+                    } else {
+                            let class1='fa fa-star-o border';
+                            let class2='fa fa-star-o border';
+                            let class3='fa fa-star-o border';
+                            let class4='fa fa-star-o border';
+                            let class5='fa fa-star-o border';                        
+                            let json = {
+                                name  : rt,
+                                class5 : class5,
+                                class4 : class4,
+                                class3  :class3,
+                                class2 : class2,
+                                class1 : class1,
+                                value : 0,
+                                sum : array[rt][1],
+                                isSelect : false
+                            }
+                            array[rt][0] = json;                        
+                          cb1();
+                    }
+                }
+                else
+                {
+                    let class1='fa fa-star-o border';
+                    let class2='fa fa-star-o border';
+                    let class3='fa fa-star-o border';
+                    let class4='fa fa-star-o border';
+                    let class5='fa fa-star-o border'; 
+                    let json = {
+                        name  : rt,
+                        class5 : class5,
+                        class4 : class4,
+                        class3  :class3,
+                        class2 : class2,
+                        class1 : class1,
+                        value : 0,
+                        sum : array[rt][1],
+                        isSelect : false
+                    }
+                    array[rt][0] = json;
+                    cb1();
+                }
+            },function(){
+                //user rating topics which are not in general rating topics
+                let difference = userRating.filter(x => !ratings.includes(x));
+                if(difference.length>0){
+                    exports.calculateRating(difference,array,ratingsGivenByUsers,function(error,callback){
+                        
+                    });
+                }
+                let newArr = {},newArr1 ={};
+               
+                Object.keys(array).forEach(function(key) {                    
+                    newArr1[key] = {};                   
+                    if(array[key][0].isSelect==true){
+                    newArr[key] = {name : key,class1:array[key][0].class1,class2:array[key][0].class2,class3:array[key][0].class3,class4:array[key][0].class4,class5:array[key][0].class5,value:array[key][0].value,isSelect:array[key][0].isSelect};
+                  }
+                  else
+                  {
+                       newArr1[key] = {name : key,class1:array[key][0].class1,class2:array[key][0].class2,class3:array[key][0].class3,class4:array[key][0].class4,class5:array[key][0].class5,value:array[key][0].value,isSelect:array[key][0].isSelect};
+                  }
+                });
+                _.merge(newArr,newArr1); // merge objects to show selected rating topics first
+              
+                res.json({
+                    success:true,
+                    msg:"My Rating Data Fetched successfully",
+                    data:JSON.parse(JSON.stringify(newArr)),
+                    listId:listId
+                });
+            });
+            }
+            else
+            {
+              
+                res.json({
+                    success:true,
+                    msg:"My Rating Data Fetched successfully",
+                    data:array[0],
+                    listId:listId
+                });
+            }
+            
+         }).catch(function(error) {
+            console.log(error)
+            res.json({
+                'success': false,
+                'msg': "Failed to Fetched RatingData"
+            })
+            return
+        })
+        }).catch(function(error) {
+            console.log(error)
+            res.json({
+                'success': false,
+                'msg': "Failed to Fetched RatingData"
+            })
+            return
+        })
+    }).catch(function(error) {
+            console.log(error)
+            res.json({
+                'success': false,
+                'msg': "Failed to Fetched RatingData"
+            })
+            return
+        })
+        
+    }).catch(function(error) {
+        res.json({
+            success: false,
+            msg: "Authentication failed",
+            authStatus : 1
+        })
+    })
+})
+
+module.exports.calculateRating = function(difference,array,ratingsGivenByUsers,callback)
+{
+    async.forEach(difference,function (rt,cb1) {
+        array[rt] =[];
+        array[rt][0] = {};
+        array[rt][1] =0;
+        array[rt][2] =0;
+     async.forEach(ratingsGivenByUsers,function (rgu,cb3) {
+                            
+        let rating = rgu.ratings;
+        let keys = Object.keys(rating);  
+        // check rating topic in already given topics
+        if(keys.indexOf(rt)>-1){
+            let class1='fa fa-star-o border';
+            let class2='fa fa-star-o border';
+            let class3='fa fa-star-o border';
+            let class4='fa fa-star-o border';
+            let class5='fa fa-star-o border';
+            array[rt][1] += parseInt(rating[rt]);
+            array[rt][2] +=1;
+            let avg = array[rt][1]/array[rt][2];
+            if(avg==0)
+              {
+                class1=class2=class3=class4=class5='fa fa-star-o border';
+              }
+              else if(avg>=0.1 && avg<=0.9)
+              {
+                class1 = 'fa fa-star-half-o checked';
+                class2=class3=class4=class5='fa fa-star-o border';
+              }
+              else if(avg==1)
+              {
+                class1 = 'fa fa-star checked';
+                class2=class3=class4=class5='fa fa-star-o border';
+              }
+              else if(avg>=1.1 && avg<=1.9)
+              {
+                class1 = 'fa fa-star checked';
+                class2 = 'fa fa-star-half-o checked';
+                class3=class4=class5='fa fa-star-o border';
+              }
+              else if(avg==2)
+              {
+                class1 =class2= 'fa fa-star checked';
+                class3=class4=class5='fa fa-star-o border';
+              }
+              else if(avg>=2.1 && avg<=2.9)
+              {
+                class1 =class2= 'fa fa-star checked';
+                class3 = 'fa fa-star-half-o checked';
+                class4=class5='fa fa-star-o border';
+              }
+              else if(avg==3)
+              {
+                class1 =class2=class3= 'fa fa-star checked';
+                class4=class5='fa fa-star-o border';
+              }
+              else if(avg>=3.1 && avg<=3.9)
+              {
+                class1 =class2=class3= 'fa fa-star checked';
+                class4= 'fa fa-star-half checked';
+                class5='fa fa-star-o border';
+              }
+              else if(avg==4)
+              {
+                class1 =class2=class3=class4= 'fa fa-star checked';
+                class5='fa fa-star-o border';
+              }
+              else if(avg>=4.1 && avg<=4.9)
+              {
+                class1 = class2=class3=class4= 'fa fa-star checked';
+                class5 = 'fa fa-star-half-o checked';
+                
+              }
+              else if(avg==5)
+              {
+                class1=class2=class3=class4=class5='fa fa-star checked';
+              }
+
+            let json = {
+                name  : rt,
+                class5 : class5,
+                class4 : class4,
+                class3  :class3,
+                class2 : class2,
+                class1 : class1,
+                value : Math.round(avg * 10) / 10,
+                sum : array[rt][1],
+                isSelect  : true
+            }                               
+            array[rt][0] = json;
+            cb3();
+
+        } else {
+            let class1='fa fa-star-o border';
+            let class2='fa fa-star-o border';
+            let class3='fa fa-star-o border';
+            let class4='fa fa-star-o border';
+            let class5='fa fa-star-o border';
+          
+          
+                let json = {
+                    name  : rt,
+                    class5 : class5,
+                    class4 : class4,
+                    class3  :class3,
+                    class2 : class2,
+                    class1 : class1,
+                    value : 0,
+                    sum : array[rt][1],
+                    isSelect : true
+                }
+                array[rt][0] = json;
+              cb3();
+        }
+
+    },function(){
+        cb1();
+    });
+    },function(){
+      callback(null,array);
+    });
+ 
+}
+router.post('/getParticularRating',function(req,res,next){
+      rating.find({
+            "rated_to":req.body.rated_to,
+            "rated_by" : req.body.rated_by,
+        },{ratings:1}).then(function(ratingData){
+          
+          if(ratingData.length>0){
+          let keys = Object.keys(ratingData[0].ratings);  
+          let ratingTopics = ratingData[0].ratings;
+          if(keys.length>0){
+             let array = [];
+
+             async.forEach(keys,function (item,cb3) {
+              array[item] =[];
+              array[item][0] = {};
+              let class1='fa fa-star-o border';
+              let class2='fa fa-star-o border';
+              let class3='fa fa-star-o border';
+              let class4='fa fa-star-o border';
+              let class5='fa fa-star-o border';
+       
+            if(ratingTopics[item]==0)
+              {
+                class1=class2=class3=class4=class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]>=0.1 && ratingTopics[item]<=0.9)
+              {
+                class1 = 'fa fa-star-half-o checked';
+                class2=class3=class4=class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]==1)
+              {
+                class1 = 'fa fa-star checked';
+                class2=class3=class4=class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]>=1.1 && ratingTopics[item]<=1.9)
+              {
+                class1 = 'fa fa-star checked';
+                class2 = 'fa fa-star-half-o checked';
+                class3=class4=class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]==2)
+              {
+                class1 =class2= 'fa fa-star checked';
+                class3=class4=class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]>=2.1 && ratingTopics[item]<=2.9)
+              {
+                class1 =class2= 'fa fa-star checked';
+                class3 = 'fa fa-star-half-o checked';
+                class4=class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]==3)
+              {
+                class1 =class2=class3= 'fa fa-star checked';
+                class4=class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]>=3.1 && ratingTopics[item]<=3.9)
+              {
+                class1 =class2=class3= 'fa fa-star checked';
+                class4= 'fa fa-star-half checked';
+                class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]==4)
+              {
+                class1 =class2=class3=class4= 'fa fa-star checked';
+                class5='fa fa-star-o border';
+              }
+              else if(ratingTopics[item]>=4.1 && ratingTopics[item]<=4.9)
+              {
+                class1 = class2=class3=class4= 'fa fa-star checked';
+                class5 = 'fa fa-star-half-o checked';
+                
+              }
+              else if(ratingTopics[item]==5)
+              {
+                class1=class2=class3=class4=class5='fa fa-star checked';
+              }
+       
+              let json = {
+                name  : item,
+                class5 : class5,
+                class4 : class4,
+                class3  :class3,
+                class2 : class2,
+                class1 : class1,
+                value : Math.round(ratingTopics[item] * 10) / 10,              
+                isSelect : true
+              }
+              array[item][0] = json;
+             
+              cb3();
+              },function(){
+                let newArr = {};
+                Object.keys(array).forEach(function(key) {                    
+                    newArr[key] = {};
+                    newArr[key] = {name : key,class1:array[key][0].class1,class2:array[key][0].class2,class3:array[key][0].class3,class4:array[key][0].class4,class5:array[key][0].class5,value:array[key][0].value,isSelect:array[key][0].isSelect};
+                });
+
+                res.json({
+                    success:true,
+                    msg:"My Rating Data Fetched successfully",
+                    data:JSON.parse(JSON.stringify(newArr))
+                });
+               
+              });
+          }
+          else
+          {
+            res.json({
+                    success:true,
+                    msg:"My Rating Data Fetched successfully",
+                    data:[]
+                });
+          }
+        }
+        else {
+          res.json({
+                    success:true,
+                    msg:"My Rating Data Fetched successfully",
+                    data:[]
+                });
+        }
+      }).catch(function(error) {
+        console.log(error);
+        res.json({
+            success: false,
+            msg: "Unable to get rating",
+            authStatus : 0
+        })
+    })  
+})
 module.exports = router;
diff --git a/routes/user/user_actions.js b/routes/user/user_actions.js
index 42c668f..6ed4721 100644
--- a/routes/user/user_actions.js
+++ b/routes/user/user_actions.js
@@ -1,16 +1,21 @@
 var express = require('express');
 var router = express.Router();
+
 var Favorite = require(appRoot + '/models/dnr_favorites');
 var Dates = require(appRoot + '/models/dnr_dates');
 var Blocked = require(appRoot + '/models/dnr_blocked');
 var User = require(appRoot + '/models/dnr_users');
+
 var Token = require(appRoot + '/models/dnr_token');
 var ListItems = require(appRoot + '/models/dnr_list');
 var config = require(appRoot + '/libs/config');
+
 var jwt = require('jsonwebtoken');
 var jwtAuth = require(appRoot + '/libs/jwtAuth');
+
 var randomString = require('randomstring');
 var _ = require('lodash');
+
 var fileUpload = require(appRoot + '/libs/fileupload');
 var fs = require("fs");
 var async = require("async");
@@ -19,9 +24,15 @@ var ObjectId = require('mongoose').Types.ObjectId;
 var getImage = 'uploads/users/';
 var userImage = '/public/uploads/users/';
 bcrypt = require('bcrypt');
+
 var salt = bcrypt.genSaltSync(10);
 var email_msgs = require(appRoot + '/message.json'); 
+
 const CONSTANTS = require(appRoot + '/Constants/constant');
+    var stripe_customer = require(appRoot + '/libs/stripe/customer');
+    var stripe_plan = require(appRoot + '/libs/stripe/plan');
+    var stripe_subscribe = require(appRoot + '/libs/stripe/subscription');
+    var stripe_cards = require(appRoot + '/libs/stripe/cards');
 /*
  * Favorite users
  * created by - AniMesh;
@@ -62,6 +73,7 @@ router.post('/add_favorites', function(req,res,next) {
             Favorite.findOne({
                 'favorite_to': favorite_to
             }).then(function(result) {
+                console.log(result)
                 var result1 = _.extend(result,req.body)
                 result1.save(function(err, favoriteInfo) {
                     if (!err) {
@@ -74,7 +86,8 @@ router.post('/add_favorites', function(req,res,next) {
                     } else {
                         res.json({
                             'success': false,
-                            'msg': "Enter valid favorite Id"
+                            'msg': "Enter valid favorite Id",
+
                         });
                         return;
                     }
@@ -84,7 +97,8 @@ router.post('/add_favorites', function(req,res,next) {
     }).catch(function(error) {
         res.json({
             success: false,
-            msg: "Authentication failed"
+            msg: "Authentication failed",
+            authStatus : 1
         })
     })
 })
@@ -96,7 +110,7 @@ router.post('/get_favorites', function(req, res, next) {
     var token = req.headers['accesstoken'];
     jwtAuth.checkAuth(token).then(function(result) {
         Favorite.find({
-            'favorite_by': req.body.favorite_by
+            'favorite_by': req.body.favorite_by,'is_favorite':true
         }).then(function(favoriteData) {
             var FavList = [];
             
@@ -105,6 +119,22 @@ router.post('/get_favorites', function(req, res, next) {
                 i=0;
                 favoriteData.forEach(function(FavoriteToList) {
                     User.findOne({'_id':FavoriteToList.favorite_to}).exec().then(function(FavoriteToInfo) {
+
+                     Dates.findOne({$or: [{
+                                            "date_receiver_id": req.body.favorite_by,"date_requester_id": FavoriteToList.favorite_to                                        
+                            },{
+                                "date_receiver_id": FavoriteToList.favorite_to,"date_requester_id":req.body.favorite_by
+                            }]
+                        }).then(function(dateData) {
+                           if(dateData)
+                            {                               
+                               FavoriteToList['DateFlag'] = 1; 
+                            }
+                            else
+                            {                               
+                               FavoriteToList['DateFlag'] = 0;                                
+                            }
+                        });
                         if (FavoriteToInfo.photo) {
                             if (FavoriteToInfo.photo != null && FavoriteToInfo.photo != "" && FavoriteToInfo.photo != undefined) {
                                 var picture = CONSTANTS.baseUrl + getImage + FavoriteToInfo.photo;
@@ -152,7 +182,8 @@ router.post('/get_favorites', function(req, res, next) {
         console.log(error);
         res.json({
             success: false,
-            msg: "Authentication Failed"
+            msg: "Authentication Failed",
+            authStatus : 1
         })
         return
     })
@@ -188,29 +219,22 @@ router.post('/add_block', function(req,res,next) {
                 return
             })
         }else{
-            var blocked_to = req.body.blocked_to;
+
+             var blocked_to = req.body.blocked_to;
             req.body.is_blocked = false
-            Blocked.findOne({
-                'blocked_to': blocked_to
+            Blocked.findOneAndRemove({ "blocked_by":  req.body.blocked_by,
+                    "blocked_to":  req.body.blocked_to
             }).then(function(result) {
-                var result1 = _.extend(result,req.body)
-                result1.save(function(err, blockedInfo) {
-                    if (!err) {
+                               
                         res.json({
                             success: true,
                             msg: "Blocked removed successfully",
-                            data: blockedInfo
-                        })
-                        return
-                    } else {
-                        res.json({
-                            'success': false,
-                            'msg': "Enter valid block Id"
+                            data: result
                         })
-                        return
-                    }
-                })
+                   
+                        return;               
             }).catch(function(error) {
+                  
                 res.json({
                     'success': false,
                     'msg': "Something went wrong while removing the block"
@@ -221,7 +245,8 @@ router.post('/add_block', function(req,res,next) {
     }).catch(function(error) {
         res.json({
             success: false,
-            msg: "Authentication failed"
+            msg: "Authentication failed",
+            authStatus : 1
         })
     })
 })
@@ -231,8 +256,63 @@ router.post('/unblocked_all', function(req,res,next) {
     var token = req.headers['accesstoken'];
     jwtAuth.checkAuth(token).then(function(result) {
         var blocked_by = req.body.blocked_by
-        Blocked.deleteMany({ 
-            blocked_by: blocked_by 
+        
+        Blocked.find({'blocked_by':blocked_by}).then(function(result){
+            
+            if (result.length==0) {
+                res.json({
+                    success: false,
+                    msg: "no more users to unblock"
+                });
+                return
+            }else{
+                Blocked.deleteMany({ 
+                    blocked_by: blocked_by 
+                }, function(err) {
+                    if (err) {
+                        console.log(err)
+                        res.send("got an error")
+                    } else {
+                        res.json({
+                            success: true,
+                            msg: "Unblocked All"
+                        });
+                        return
+                    }
+                })
+    
+            }
+        })
+    }).catch(function(error) {
+        res.json({
+            success: false,
+            msg: "Authentication failed",
+            authStatus : 1
+        });
+        return
+    })
+})
+
+/*unblock single user*/
+router.post('/unblockEach',function(req,res){
+    console.log(req.body)
+    var token = req.headers['accesstoken'];
+    jwtAuth.checkAuth(token).then(function(result) {
+        var blocked_by = req.body.blocked_by
+
+        if (req.body.blocked_to.length==0) {
+            res.json({
+                success: false,
+                msg: "Please select users to unblock"
+            });
+            return       
+        }
+        
+        Blocked.deleteMany({         
+                'blocked_by':blocked_by
+        , blocked_to: { 
+                $in: req.body.blocked_to
+            }
         }, function(err) {
             if (err) {
                 console.log(err)
@@ -240,7 +320,7 @@ router.post('/unblocked_all', function(req,res,next) {
             } else {
                 res.json({
                     success: true,
-                    msg: "Unblocked All"
+                    msg: "You Successfully Unblocked This Users"
                 });
                 return
             }
@@ -248,11 +328,14 @@ router.post('/unblocked_all', function(req,res,next) {
     }).catch(function(error) {
         res.json({
             success: false,
-            msg: "Authentication failed"
+            msg: "Authentication failed",
+            authStatus : 1
         });
         return
     })
 })
+
+
 /*
 Input Parameter : blocked_id
 Description: Get users blocked data
@@ -264,17 +347,23 @@ router.post('/get_blocked_list', function(req, res, next) {
             'blocked_by': req.body.blocked_by,
         }).exec().then(function(blockedData) {
             var BlockedList = [];
+            
             if (blockedData.length > 0) {
                 var count = 0;
                 i=0;
                 blockedData.forEach(function(BlockedToList) {
+                    
                     User.findOne({'_id':BlockedToList.blocked_to}).exec().then(function(BlockedToInfo) {
+                    
                         if (BlockedToInfo.photo)
                             if (BlockedToInfo.photo!=null   &&  BlockedToInfo.photo!=undefined  &&  BlockedToInfo.photo!="")
                                 BlockedToInfo.photo=CONSTANTS.baseUrl + getImage + BlockedToInfo.photo
+                        
                         var temp = _.merge(BlockedToList, BlockedToInfo)
+                
                         BlockedList.push(temp);
                         count = count + 1;
+                
                         if (count == blockedData.length) {
                             res.json({
                                 success: true,
@@ -283,6 +372,7 @@ router.post('/get_blocked_list', function(req, res, next) {
                             })
                             return
                         } 
+                
                     }).catch(function(error) {
                         res.json({
                             success: false,
@@ -293,8 +383,9 @@ router.post('/get_blocked_list', function(req, res, next) {
                 })
             } else {
                 res.json({
-                    'success': false,
-                    'msg': "No Blocked Data "
+                    'success': true,
+                     data : [],
+                     msg: "You havn't blocked any user",
                 })
                 return
             }
@@ -310,7 +401,8 @@ router.post('/get_blocked_list', function(req, res, next) {
         console.log(error);
         res.json({
             success: false,
-            msg: "Authentication Failed"
+            msg: "Authentication Failed",
+            authStatus : 1
         })
         return
     })
@@ -424,7 +516,8 @@ router.post('/add_dates', function(req,res,next) {
     }).catch(function(error) {
         res.json({
             success: false,
-            msg: "Authentication failed"
+            msg: "Authentication failed",
+            authStatus : 1
         })
     })
 })
@@ -449,15 +542,21 @@ router.post('/get_dates', function(req, res, next) {
                 var count = 0;
                 i=0;
                 datedData.forEach(function(DatedByList) {
+                    
                     User.findOne({'_id':DatedByList.date_requester_id}).exec().then(function(DatedByInfo) {
-                        if (DatedByInfo.photo)
-                            if (DatedByInfo.photo!=null   &&  DatedByInfo.photo!=undefined  &&  DatedByInfo.photo!="")
+                        if (DatedByInfo.photo){
+
+                            if (DatedByInfo.photo!=null   &&  DatedByInfo.photo!=undefined  &&  DatedByInfo.photo!=""){
+
                                 DatedByInfo.photo=CONSTANTS.baseUrl + getImage + DatedByInfo.photo
+                            }
+                        }
                         var temp = _.merge(DatedByList, DatedByInfo)
                         DateList.push(temp);
                         count = count + 1;
 
                         if (count == datedData.length) {
+                            console.log('2');
                             res.json({
                                 success: true,
                                 msg: "Fetched all Dated user successfully",
@@ -474,6 +573,7 @@ router.post('/get_dates', function(req, res, next) {
                     })
                 })
             } else {
+                console.log('1');
                 res.json({
                     'success': false,
                     'msg': "User don't have any Dated users "
@@ -486,17 +586,18 @@ router.post('/get_dates', function(req, res, next) {
                 var count = 0;
                 i=0;
                 datedData.forEach(function(DatedByList) {
-                    
                     User.findOne({'_id':DatedByList.date_receiver_id}).exec().then(function(DatedByInfo) {
-                        if (DatedByInfo.photo)
-                            if (DatedByInfo.photo!=null   &&  DatedByInfo.photo!=undefined  &&  DatedByInfo.photo!="")
+                        if (DatedByInfo.photo){
+                            if (DatedByInfo.photo!=null   &&  DatedByInfo.photo!=undefined  &&  DatedByInfo.photo!=""){
                                 DatedByInfo.photo=CONSTANTS.baseUrl + getImage + DatedByInfo.photo
-
+                            }    
+                        }
                         var temp = _.merge(DatedByList, DatedByInfo)
                         DateList.push(temp);
                         count = count + 1;
 
                         if (count == datedData.length) {
+                            console.log('5');
                             res.json({
                                 success: true,
                                 msg: "Fetched all Dated user successfully",
@@ -508,23 +609,20 @@ router.post('/get_dates', function(req, res, next) {
                         res.json({
                             success: false,
                             msg: "Failed to fetched dated data"
-                        })
-                        return
+                        });
+                        return;
                     })
                 })
             } else {
+                console.log('3');
                 res.json({
                     'success': false,
                     'msg': "User don't have any Dated users "
                 })
                 return
             }
-            // res.json({
-            //     success: true,
-            //     msg: "Fetched all Dated user successfully",
-            //     data: datedData
-            // })
         };
+
         }).catch(function(error) {
             console.log(error);
             res.json({
@@ -533,153 +631,15 @@ router.post('/get_dates', function(req, res, next) {
             })
         })
     }).catch(function(error) {
+        console.log('4',error);
         res.json({
             success: false,
-            msg: "Authentication Failed"
+            msg: "Authentication Failed",
+            authStatus : 1
         })
     })
 })
 /*
-* Api for getting All Near Users
-* Created On : 22nd Nov 2017
-*/
-router.post('/get_nearby_users',function(req,res,next) {
-    var token = req.headers['accesstoken'];
-    var nearByData = [];
-    var lat =req.body.lat;
-    var lng =req.body.lng;
-    let distance =100;
-    00;
-    if(token!=null){
-        jwtAuth.checkAuth(token).then(function(result) {
-            User.findOne({ _id:  req.body.userId}).then(function(userData) {
-                let location = userData.location;
-                let is_upgrade = userData.is_upgrade;
-                // if(is_upgrade ==false)
-                // {
-                //     filter_setting = {looking_for:userData.  }
-                // }
-                // else
-                // {
-
-                // }
-                console.log('near by', location);
-            User.find({ _id: { $nin: [ObjectId(req.body.userId)] },location: { $geoWithin: { $centerSphere: [ [location[0],location[1]] ,
-                                                     distance / 3963.2 ] } } }).then(function(result1) { //  distance / 3963.2 ] convert to miles
-                if (result1) {
-
-                        for (var i = 0; i < result1.length; i++) {
-                            if (result1[i].photo) {
-                                var picture = CONSTANTS.baseUrl + getImage + result1[i].photo;
-                                result1[i].photo = picture;
-                            }
-                            nearByData.push(result1[i]);
-                        };
-
-                        for (var i = 0; i < result1.length; i++) {
-                            if(result1[i].height!=""&&result1[i].height!=undefined&&result1[i].height!=null){
-                                converted_height = result1[i].height * 0.3937;
-                                result1[i].height = converted_height;
-                            }
-                        }
-                        for (var i = 0; i < result1.length; i++) {
-                            if(result1[i].weight!=""&&result1[i].weight!=undefined&&result1[i].weight!=null){
-                                converted_weight = result1[i].weight * 2.2046;
-                                result1[i].weight = converted_weight;
-                            }
-                        }
-                    
-
-                    res.json({
-                        success:true,
-                        msg:"All Near By Users",
-                        data:result1
-                    });
-                    return;
-                } else{
-                    res.send("data not get");
-                };
-            }).catch(function(error) {
-                console.log(error);
-                res.json({
-                    success:false,
-                    msg:"unable to trace logged_in user data"
-                });
-                return;
-            });
-        }).catch(function(error){
-            console.log(error);
-                 res.json({
-                success:false,
-                msg:"user not exist"
-            });
-            return;
-        })
-        }).catch(function(error) {
-            res.json({
-                success:false,
-                msg:"Authentication failed"
-            });
-            return;
-        });
-    }
-    else
-    {
-        res.json({
-            success:false,
-            msg:"Authentication failed"
-        });
-        return;  
-    }
-})
-/*
-* Api for updating Lat Lng
-* Created On : 1st Dec 2017
-*/
-router.post('/update_lat_lng',function(req,res,next) {
-    var token = req.headers['accesstoken'];
-    jwtAuth.checkAuth(token).then(function(result) {
-        if (req.body.latitude == undefined) {
-            res.json({
-                'success':false,
-                'msg':" Invalid latitude longitude"
-            });
-            return;
-        } else{
-            var tmpArr = [];
-            tmpArr.push(req.body.latitude);
-            tmpArr.push(req.body.longitude);
-
-            console.log('update_lat_lng =>',tmpArr);
-            
-            User.findOneAndUpdate({
-                _id: req.body.userId
-            }, {
-                $set: {
-                    'location' : tmpArr
-                }
-            }, {
-                'new': true
-            }, function(err, data) {
-                // console.log('update lat lng resp => ',data);
-                res.json({
-                    'success':true,
-                    'msg':"latitude longitude successfully updated",
-                    'data':data
-                });
-                return;
-            });
-        };
-    }).catch(function(error) {
-        console.log(error);
-        res.json({
-            'success':false,
-            'msg':"Authentication failed"
-        });
-        return;
-    })
-})
-/*
 * Insert Ethnicity, Relationship Status, Searching For List
 * Created On : 6th Dec 2017 
 * Updated On : 7th Dec 2017 
@@ -688,7 +648,7 @@ router.post('/insert_content',function(req,res,next) {
     var token = req.headers['accesstoken'];
     jwtAuth.checkAuth(token).then(function(result) {
         console.log(req.body)
-
+        // 
         if (req.body.is_ethinicity==true) {
             ListItems.findOne({
                 '_id':req.body.ListItemsId
@@ -749,16 +709,64 @@ router.post('/insert_content',function(req,res,next) {
                 });
                 return;
             })
+        } else if(req.body.is_rating == true) {
+            User.findOne({
+                '_id':req.body.userId
+            }).then(function(UserData) {
+
+                
+                UserData.rating = req.body.ratings
+                // console.log(UserData)
+                // return
+                
+                var update_searching_data = _.merge(UserData,UserData)
+
+                update_searching_data.save(function(err, data2) {
+                // console.log(update_searching_data)
+                // return
+
+                    if (err) {
+                        console.log(err)
+                        res.json({
+                            success: false,
+                            msg: "Failed to Add Rating List"
+                        });
+                        return;
+                    } else {
+                        res.json({
+                            success: true,
+                            msg: "Searching List updated Successfully for Rating",
+                            data: data2
+                        });
+                        return;
+                    }
+                })
+
+            }).catch(function(error) {
+                console.log(error);
+                res.json({
+                    success:true,
+                    msg:"error while fetching searching data"
+                });
+                return;
+            })
+        
         }else{
             //adding interest
-            ListItems.findOne({
-                '_id':req.body.ListItemsId
-            }).then(function(ListItemsData) {
-                ListItemsData.interests.push(req.body.interests)
+            User.findOne({
+                '_id':req.body.userId
+            }).then(function(UserData) {
+
                 
-                var update_searching_data = _.merge(ListItemsData,ListItemsData)
+                UserData.interest = req.body.interests
+                // console.log(UserData)
+                // return
+                
+                var update_searching_data = _.merge(UserData,UserData)
 
                 update_searching_data.save(function(err, data2) {
+                // console.log(update_searching_data)
+                // return
 
                     if (err) {
                         console.log(err)
@@ -789,7 +797,8 @@ router.post('/insert_content',function(req,res,next) {
     }).catch(function(error) {
         res.json({
             success:true,
-            msg:"Authentication Failed"
+            msg:"Authentication Failed",
+            authStatus : 1
         })
     })
 })
@@ -820,7 +829,8 @@ router.post('/get_list',function(req,res,next) {
     }).catch(function(error) {
         res.json({
             'success':false,
-            'msg':"Authentication failed"
+            'msg':"Authentication failed",
+            authStatus : 1
         })
         return
     })
@@ -877,7 +887,8 @@ router.post('/insert_filter_data',function(req,res,next) {
     }).catch(function(error) {
         res.json({
             success:true,
-            msg:"Authentication Failed"
+            msg:"Authentication Failed",
+            authStatus : 1
         })
         return
     })
@@ -917,10 +928,824 @@ router.post('/get_filter_data',function(req,res,next) {
         console.log(error)
         res.json({
             success:true,
-            msg:"Authentication Failed"
+            msg:"Authentication Failed",
+            authStatus : 1
         })
         return
     })
 })
+/*
+* Api for getting All Near Users
+* Created On : 22nd Nov 2017
+*/
+router.post('/get_nearby_users',function(req,res,next) {
+    var token = req.headers['accesstoken'];
+    var nearByData = [];
+    var lat = req.body.lat;
+    var lng = req.body.lng;
+    let distance = 100000000;
+    let userId = req.body.userId;
+    if(token!=null){
+        jwtAuth.checkAuth(token).then(function(result) {
+            
+            User.findOne({ _id:  req.body.userId }).then(function(userData) {
+
+                let location = userData.location;
+
+                console.log(location)
+                // return
+                
+                let is_upgrade = userData.is_upgrade;
+
+                // if(!lat)
+                //     lat = location[0];
+                // if(!lng)
+                //     lng = location[1];
+                /*
+                    Distance calculation query
+                    db.runCommand({ geoNear : "dnr_users", near : [ 18.5204, 73.8567], spherical: true})
+
+
+                    { _id: { $nin: [ObjectId(req.body.userId)] },location: { $geoWithin: { $centerSphere: [ [location[0],location[1]] ,distance / 3963.2 ] } } }
+                
+
+                    db.runCommand({_id: { $nin: [ObjectId(req.body.userId)] },geoNear : "dnr_users", near : [ location[0], location[1]], spherical: true})
+                
+                    YourModel.db.db.executeDbCommand({geoNear : "locations", near : [11.252,14.141], spherical: true }, function(err,res) { console.log(res.documents[0].results)});
+                */
+                //console.log('near by', location);
+
+            if (location.length > 0) {
+
+                User.collection.geoNear(location[0], location[1], {spherical: true, maxDistance: 10000000000000}).then(function(result1) { 
+
+                    if (result1) {
+                        var i=0;
+                            if(i<result1['results'].length){
+                                function next(){
+                                result1['results'][i]['obj']['dist']  = [];
+                                result1['results'][i]['obj']['DateFlag']  = 0;
+                                result1['results'][i]['obj']['is_favorite']  = 0;
+                                result1['results'][i]['obj']['isBlocked']  = 0;
+                                result1['results'][i]['obj']['dist'] = result1['results'][i]['dis'];
+                                
+                                if(result1['results'][i]['obj'].photo!=""&&result1['results'][i]['obj'].photo!=undefined&&result1['results'][i]['obj'].photo!=null){
+                                    if (result1['results'][i]['obj'].photo) {
+                                        var picture = CONSTANTS.baseUrl + getImage + result1['results'][i]['obj'].photo;
+                                        result1['results'][i]['obj'].photo = picture;
+                                    }
+                                }
+
+                                if(result1['results'][i]['obj'].height!=""&&result1['results'][i]['obj'].height!=undefined&&result1['results'][i]['obj'].height!=null){
+                                    converted_height = result1['results'][i]['obj'].height * 0.3937;
+                                    result1['results'][i]['obj'].height = converted_height.toFixed(2);
+                                }
+
+                                if(result1['results'][i]['obj'].weight!=""&&result1['results'][i]['obj'].weight!=undefined&&result1['results'][i]['obj'].weight!=null){
+                                    converted_weight = result1['results'][i]['obj'].weight * 2.2046;
+                                    result1['results'][i]['obj'].weight = converted_weight.toFixed(2);
+                                }
+                               
+                                Dates.findOne({$or: [{
+                                            "date_receiver_id": userId,"date_requester_id": result1['results'][i]['obj']._id                                        
+                                        },{
+                                            "date_receiver_id": result1['results'][i]['obj']._id,"date_requester_id":userId
+                                        }]
+                                    }).then(function(dateData) {
+                                       if(dateData)
+                                        {
+                                           
+                                           result1['results'][i]['obj']['DateFlag'] = 1;
+                                            
+
+                                        }
+                                        else
+                                        {
+                                           
+                                           result1['results'][i]['obj']['DateFlag'] = 0;
+                                            
+                                        }
+                                        //-------------
+                                        Favorite.findOne({$or: [{
+                                            "favorite_to": result1['results'][i]['obj']._id,"favorite_by":userId
+                                        }]
+                                    }).then(function(favData) {
+                                        if(favData)
+                                        {
+                                           
+                                            result1['results'][i]['obj']['is_favorite'] = 1;
+                                        
+                                        }
+                                        else
+                                        {
+                                           
+                                            result1['results'][i]['obj']['is_favorite'] = 0;
+                                            
+                                        }
+                                        /*-------------*/
+                                         Blocked.findOne({$or: [{
+                                            "blocked_by": userId,"blocked_to": result1['results'][i]['obj']._id
+                                        
+                                        }]
+                                        }).then(function(blockData) {                                           
+                                            if(blockData)
+                                            {
+                                               
+                                               result1['results'][i]['obj']['isBlocked'] = 1;
+                                               
+                                            }
+                                            else
+                                            {
+                                               
+                                               result1['results'][i]['obj']['isBlocked'] = 0;
+                                               
+                                            }
+                                        }).catch(function(error){
+                                            console.log(error);
+                                        })
+                                        /*------------------*/
+                                    }).catch(function(error){
+                                        console.log(error);
+                                    })
+                                    //---------------------
+                                }).catch(function(error){
+                                    console.log(error);
+                                })
+                                if (result1['results'][i]['obj']._id  !=  req.body.userId) {
+                                    nearByData.push(result1['results'][i]['obj']);
+                                };
+
+                            if (i == result1['results'].length - 1) {
+                                res.json({
+                                    success:true,
+                                    msg:"All Near By Users",
+                                    data:nearByData
+                                });
+                            }
+                            i++;
+                            // here you can decide whether you want to do the next iteration
+                            // or not by either calling next() or not.
+                            next();           
+                            // return;
+                            // }
+                            }
+                            next();
+                        }
+                    } else{
+                        res.send("data not get");
+                    };                
+                }).catch(function(error) {
+                    console.log(error);
+                    res.json({
+                        success:false,
+                        msg:"unable to get Latitude and Longitude"
+                    });
+                    return;
+                });
+            } else{
+                User.aggregate(
+                    {
+                     $addFields: 
+                       { 
+                           dist: 0
+                        }
+                    }, function(err, data) {
+                        let arr= [];
+                        async.forEach(data,function (item,callback) { 
+                            let objData = {}; 
+                            objData = item;
+                            Dates.findOne({$or: [{
+                                            "date_receiver_id": userId,"date_requester_id": item._id                                        
+                                        },{
+                                            "date_receiver_id": item._id,"date_requester_id":userId
+                                        }]
+                                    }).then(function(dateData) {
+                                       // console.log('dateData',dateData);
+                                        if(dateData)
+                                        {
+                                           
+                                            objData.DateFlag = 1;
+                                            
+
+                                        }
+                                        else
+                                        {
+                                           
+                                            objData.DateFlag = 0;
+                                            
+                                        }
+                                        //-------------
+                                        Favorite.findOne({$or: [{
+                                            "favorite_to": item._id,"favorite_by":userId
+                                        }]
+                                    }).then(function(favData) {
+                                    
+                                        if(favData)
+                                        {
+                                           
+                                            objData.is_favorite = 1;
+                                        
+                                        }
+                                        else
+                                        {
+                                           
+                                            objData.is_favorite = 0;
+                                            
+                                        }
+                                        /*-------------*/
+                                         Blocked.findOne({$or: [{
+                                            "blocked_by": userId,"blocked_to": data[i]._id
+                                        
+                                        }]
+                                        }).then(function(blockData) {
+                                        if(blockData)
+                                        {
+                                           
+                                            objData.isBlocked = 1;
+                                           
+                                        }
+                                        else
+                                        {
+                                           
+                                            objData.isBlocked = 0;
+                                           
+                                        }
+
+                                        if(item.photo!=""&&item.photo!=undefined&&item.photo!=null){
+                                            if (item.photo) {
+                                                var picture = CONSTANTS.baseUrl + getImage + item.photo;
+                                                item.photo = picture;
+                                            }
+                                        }
+
+                                        if(item.height!=""&&item.height!=undefined&&item.height!=null){
+                                            converted_height = item.height * 0.3937;
+                                            item.height = converted_height.toFixed(2);
+                                        }
+
+                                        if(item.weight!=""&&item.weight!=undefined&&item.weight!=null){
+                                            converted_weight = item.weight * 2.2046;
+                                            item.weight = converted_weight.toFixed(2);
+                                        }
+
+                                        if (item._id  !=  userId) {
+                                             arr.push(objData);
+                                        };
+                                       
+                                        callback();
+
+                                        }).catch(function(error){
+                                            console.log(error);
+                                        })
+                                        /*------------------*/
+                                    }).catch(function(error){
+                                        console.log(error);
+                                    })
+                                    //---------------------
+                                }).catch(function(error){
+                                    console.log(error);
+                                })                             
+                               
+                                //----------------------------------------
+                           
+                        },function(){
+                              res.json({
+                                success:true,
+                                data:arr
+                            });
+                            return;
+                        });
+
+                      
+                });
+            };
+            }).catch(function(error){
+                console.log(error);
+                     res.json({
+                    success:false,
+                    msg:"user not exist"
+                });
+                return;
+            })
+        }).catch(function(error) {
+            res.json({
+                success:false,
+                msg:"Authentication failed",
+                authStatus : 1
+            });
+            return;
+        });
+    }
+    else
+    {
+        res.json({
+            success:false,
+            msg:"Authentication failed",
+            authStatus : 1
+        });
+        return;  
+    }
+})
+/*
+* Api for updating Lat Lng
+* Created On : 1st Dec 2017
+*/
+router.post('/update_lat_lng',function(req,res,next) {
+    var token = req.headers['accesstoken'];
+    console.log('okk');
+    jwtAuth.checkAuth(token).then(function(result) {
+                
+        if (req.body.latitude == "" || req.body.latitude == undefined || req.body.latitude == null) {
+            res.json({
+                'success':false,
+                'msg':"Unable to update location"
+            });
+            return;
+        } else{
+            var tmpArr = [];
+            tmpArr.push(req.body.latitude);
+            tmpArr.push(req.body.longitude);
+
+            console.log('update_lat_lng =>',tmpArr);
+            
+            User.findOneAndUpdate({
+                _id: req.body.userId
+            }, {
+                $set: {
+                    'location' : tmpArr
+                }
+            }, {
+                'new': true
+            }, function(err, data) {
+                // console.log('update lat lng resp => ',data);
+                res.json({
+                    'success':true,
+                    'msg':"latitude longitude successfully updated",
+                    'data':data
+                });
+                return;
+            });
+        };
+    }).catch(function(error) {
+        console.log(error);
+        res.json({
+            'success':true, //temporary
+            'msg':"Authentication failed",
+            authStatus : 1
+        });
+        return;
+    })
+})
+
+/*
+* Api for updating device token
+* Created On : 23rd Feb 2018
+*/
+router.post('/update_device_token',function(req,res,next) {
+    var token = req.headers['accesstoken'];
+    jwtAuth.checkAuth(token).then(function(result) {        
+        
+        if (req.body.userId == "" || req.body.device_type == undefined || req.body.device_token == null) {
+            res.json({
+                'success':false,
+                'msg':"Send manditory fields"
+            });
+            return;
+        } else{
+
+            // User.findOne({
+            //     '_id': userId
+            // }).then(function(userData) {
+
+
+            var tmpArr = [];
+            tmpArr.push(req.body.device_type);
+            tmpArr.push(req.body.device_token);
+
+            console.log('update_lat_lng =>',tmpArr);
+            
+            User.findOneAndUpdate({
+                _id: req.body.userId
+            }, {
+                $set: {
+                    'location' : tmpArr
+                }
+            }, {
+                'new': true
+            }, function(err, data) {
+                // console.log('update lat lng resp => ',data);
+                res.json({
+                    'success':true,
+                    'msg':"latitude longitude successfully updated",
+                    'data':data
+                });
+                return;
+            });
+        };
+    }).catch(function(error) {
+        console.log(error);
+        res.json({
+            'success':false,
+            'msg':"Authentication failed",
+            authStatus : 1
+        });
+        return;
+    })
+})
+
+//CreatedOn: 6th March 2018
+router.post('/getPlans', function(req, res, next) {
+    var token = req.headers['accesstoken'];
+    jwtAuth.checkAuth(token).then(function(result) {        
+        
+    var stripe_customer = require(appRoot + '/libs/stripe/customer');
+    var stripe_plan = require(appRoot + '/libs/stripe/plan');
+    stripe_plan.list_plans(function(err,callback){
+        if(err)
+        {
+            res.json({
+                success: false,
+                msg: "Failed to get Packages record"
+            });
+            return;
+        }else
+        {
+            res.json({
+                success: true,
+                msg: "Fetched All Packages Record Successfully",
+                data: callback.data
+            });
+            return;
+            console.log(callback);
+        }
+    });
+    }).catch(function(error) {
+        console.log(error);
+        res.json({
+            'success':false,
+            'msg':"Authentication failed",
+            authStatus : 1
+        });
+        return;
+    })
+});
+
+//CreatedOn: 6th March 2018
+router.post('/stripePayment', function(req, res, next) {
+    let userId = req.body.userId;
+    let planId = req.body.planId;
+    let stripeToken = req.body.CardId;
+    
+    var token = req.headers['accesstoken'];
+    
+    jwtAuth.checkAuth(token).then(function(result) {      
+    User.findOne({
+    '_id': userId
+    }).then(function(userData) {
+        //console.log(userData);
+    if (userData) {
+        let email = userData.email;  
+        let stripe_customer_id = userData.stripe_customer_id;
+        if(!stripe_customer_id)
+        {
+            //create new cusomer on stripe
+            let reqData = {
+              email: email,
+              description : "Stripe payment For "+email,
+              source: stripeToken // obtained with Stripe.js
+            }
+            stripe_customer.create_customer(reqData,function(err,callback){
+                if(err){
+                    res.send({
+                            success: false,
+                            msg: 'Unable to make payment'
+                        });
+                        return;
+                }
+                else
+                {
+                                          
+                        User.findOneAndUpdate({
+                            _id: userId
+                        }, {
+                            $set: {
+                                'stripe_customer_id': callback.id,
+                            }
+                        }, {
+                            'new': true
+                        }, function(err, data) {
+                            if (err) {
+                                console.log(err);
+                            } else {
+                                // res.send(data);
+                            }
+                        });
+                    //make payment 
+             
+                    reqData = {
+                        customer : callback._id,
+                        items : [{
+                            plan : planId
+                        }]
+                    }
+                    stripe_subscribe.create_subscription(reqData,function(err,callback){
+                        if(err)
+                        {
+                            res.send({
+                                success: false,
+                                msg:"Unable to make payment"
+                            });
+                            return;
+                        }
+                        else
+                        {
+                            User.findOneAndUpdate({
+                            _id: userId
+                            }, {
+                                $set: {
+                                    'is_upgrade': true,
+                                }
+                            }, {
+                                'new': true
+                            }, function(err, data) {
+                                if (err) {
+                                    console.log(err);
+                                } else {
+                                    // res.send(data);
+                                }
+                            });
+                            res.send({
+                                success: true,
+                                msg:"Payment Successful",
+                                data: callback
+                            });
+                            return;
+                        }
+                    });
+                }
+            })
+
+        }
+        else
+        {
+            //make payment
+             reqData = {
+                        customer : stripe_customer_id,
+                        items : [{
+                            plan : planId
+                        }]
+                    }
+                    stripe_subscribe.create_subscription(reqData,function(err,callback){
+                        if(err)
+                        {
+                            console.log(err);
+                            res.send({
+                                success: false,
+                                msg: 'User not Found'
+                            });
+                            return;
+                        }
+                        else
+                        {
+                             User.findOneAndUpdate({
+                            _id: userId
+                            }, {
+                                $set: {
+                                    'is_upgrade': true,
+                                }
+                            }, {
+                                'new': true
+                            }, function(err, data) {
+                                if (err) {
+                                    console.log(err);
+                                } else {
+                                    // res.send(data);
+                                }
+                            });
+                            res.send({
+                                success: true,
+                                msg:"Payment Successful",
+                                data: callback
+                            });
+                            return;
+                        }
+                        
+                    });
+        }
+    }
+    else
+    {
+        res.send({
+            success: false,
+            msg: 'User not Found'
+        });
+        return;
+    }
+    });
+    }).catch(function(error) {
+        console.log(error);
+        res.json({
+            'success':false,
+            'msg':"Authentication failed",
+            authStatus : 1
+        });
+        return;
+    })
+});
+
+//CreatedOn: 6th March 2018
+router.post('/getAllCards', function(req, res, next) {
+    let stripeCustomerId = req.body.stripeCustomerId;
+    let userId = req.body.userId;
+    console.log(userId,stripeCustomerId);
+
+    if(stripeCustomerId)
+    {
+        stripe_cards.list_cards(stripeCustomerId,function(err,callback){
+            if(err)
+            {
+                res.send({
+                    success: false,
+                    msg: 'Unable to get cards'
+                });
+                return;
+            }else
+            {
+                // console.log(callback.data.length)
+
+                if (callback.data.length>0) {
+                    
+                    res.send({
+                        success: true,
+                        data: callback.data
+                    });
+                    return;
+                
+                } else{
+
+                    
+                    res.send({
+                        success: false,
+                        msg : "No Cards in the List Please Add your card",
+                        data: callback.data
+                    });
+                    return;
+
+                };
+            }
+        });
+    }
+    else
+    {
+        res.send({
+            success: false,
+            msg: 'No cards added'
+        });
+        return;
+    }
+});
+
+//CreatedOn: 6th March 2018
+router.post('/addCard', function(req, res, next) {
+
+    let userId = req.body.userId;
+    // let planId = req.body.planId;
+    // let stripeToken = req.body.stripeToken;
+    
+    var token = req.headers['accesstoken'];
+    jwtAuth.checkAuth(token).then(function(result) {      
+    
+    User.findOne({
+        '_id': userId
+    }).then(function(userData) {
+
+    
+        if (userData) {
+            let email = userData.email;  
+            let stripe_customer_id = userData.stripe_customer_id;
+            
+            if(stripe_customer_id){
+                
+                let reqData = {
+                    source : {
+                        object : 'card',
+                        exp_month : req.body.exp_month,
+                        exp_year : req.body.exp_year,
+                        number : req.body.card_number,
+                        cvc : req.body.cvc
+                    }
+                }
+
+                // console.log(reqData);
+                
+                stripe_cards.create_card(stripe_customer_id,reqData,function(err,callback){
+                    
+                    if (err) {
+                        res.send({
+                            success: false,
+                            data: err.message
+                        });
+                        return; 
+                    } else{
+                        res.send({
+                            success: true,
+                            msg:"Card Successfully Added",
+                            data: callback
+                        });
+                        return;    
+                    };
+                });
+            }
+            else
+            {
+                let reqData = {
+                  email: email,
+                  description : "Stripe payment For "+email,
+                 // source: stripeToken // obtained with Stripe.js
+                }
+                stripe_customer.create_customer(reqData,function(err,callback){
+                    
+                    if(err){
+                    	console.log(err);
+                        res.send({
+                            success: false,
+                            msg: 'Unable to create customer'
+                        });
+                        return;
+                    }
+                    else
+                    {
+                       
+                        User.findOneAndUpdate({
+                            _id: userId
+                        }, {
+                            $set: {
+                                'stripe_customer_id': callback.id,
+                            }
+                        }, {
+                            'new': true
+                        }, function(err, data) {
+                            if (err) {
+                                console.log(err);
+                            } else {
+                                // res.send(data);
+                            }
+                        });
+
+                    	//update customer id in mongo
+                        let reqData = {
+                            source : {
+                                object : 'card',
+                                exp_month : req.body.exp_month,
+                                exp_year:req.body.exp_year,
+                                number: req.body.card_number,
+                                cvc: req.body.cvc
+                            }
+                        }
+
+                        stripe_cards.create_card(callback.id,reqData,function(err,callback){
+                     
+                            if(err)
+                            {
+                            	console.log(err);
+                                res.send({
+                                    success: true,
+                                    msg: 'Unable to save card'
+                                });
+                                return;
+                            
+                            }else{
+                                
+                                // console.log(callback);
+                                res.send({
+                                    success: true,
+                                    msg:"Card Successfully Added",
+                                    data: callback
+                                });
+                                return;
+                            }
+                        });
+                    }
+                });
+            }
+        }else {
+            res.json({
+                'success':false,
+                'msg':"User not found"
+            });
+            return;
+        }
+
+    });
+    }).catch(function(error) {
+        console.log(error);
+        res.json({
+            'success':false,
+            'msg':"Authentication failed",
+            authStatus : 1
+        });
+        return;
+    })
+});
 
 module.exports = router;
\ No newline at end of file
diff --git a/routes/user/users.js b/routes/user/users.js
index e74198a..90ed470 100644
--- a/routes/user/users.js
+++ b/routes/user/users.js
@@ -2,7 +2,11 @@ var express = require('express');
 var router = express.Router();
 var User = require(appRoot + '/models/dnr_users');
 var Token = require(appRoot + '/models/dnr_token');
+
 var config = require(appRoot + '/libs/config');
+
+var mailFunction = require(appRoot + '/libs/email_helper');
+
 var jwt = require('jsonwebtoken');
 var jwtAuth = require(appRoot + '/libs/jwtAuth');
 var randomString = require('randomstring');
@@ -15,7 +19,8 @@ var getImage = 'uploads/users/';
 var userImage = '/public/uploads/users/';
 bcrypt = require('bcrypt');
 var salt = bcrypt.genSaltSync(10);
-var email_msgs = require(appRoot + '/message.json'); 
+var email_msgs = require(appRoot + '/message.json');
+ 
 const CONSTANTS = require(appRoot + '/Constants/constant');
 
 /*
@@ -24,8 +29,12 @@ const CONSTANTS = require(appRoot + '/Constants/constant');
  * created on - 7th Nov 2017;
  */
 router.post('/signup', function(req, res, next) {
+    // console.log(req.body)
+    // return
     var email = req.body.email;
     var password = req.body.password;
+    // var promocode = req.body.promocode;
+
     var device = deviceType = "ANDROID";
     var deviceToken = "qaz123wsx456edc789rfv";
     var newUser;
@@ -40,9 +49,14 @@ router.post('/signup', function(req, res, next) {
         if (req.body.email || req.body.phoneNumber) {
 
             var deviceData={};
+            let tmpArr = [];
             deviceData.device_type = deviceType;
             deviceData.device_token = deviceToken;
-            
+            if(req.body.latitude && req.body.longitude){
+                tmpArr.push(req.body.latitude);
+                tmpArr.push(req.body.longitude);
+            }
+
             User.findOne({
                     'email': email.toLowerCase()
             }).then(function(userData) {
@@ -56,8 +70,11 @@ router.post('/signup', function(req, res, next) {
                         gender:"",
                         photo:"",
                         about_user:"",
-                        email: email.toLowerCase()
+                        date_of_birth:req.body.date_of_birth,
+                        email: email.toLowerCase(),
+                        location : tmpArr
                     });
+                    
                     newUser.deviceTokens = [];
                     newUser.deviceTokens.push(deviceData);
                     
@@ -73,10 +90,11 @@ router.post('/signup', function(req, res, next) {
                                        email_msgs.signup_success.signup_body;
                             var subject = email_msgs.signup_success.signup_title;
                             
-                            config.sendMail(req.body.email.toLowerCase(), text, subject).then(function(result, error) {
+                            config.sendMail(req.body.email.toLowerCase(), text, subject).then(function(error,result) {
                                 if (error) {
                                     console.log(error);
                                 }
+                            });
                                 var tokenData = {
                                     username: data.email,
                                     timestamp: config.currentTimestamp,
@@ -108,22 +126,32 @@ router.post('/signup', function(req, res, next) {
                                                 };
                                                 res.json({
                                                     success: true,
-                                                    msg: 'Successful created new user.',
+                                                    msg: 'Welcome to DnR!!',
                                                     data: createdUser
                                                 });
                                                 return;
                                             }
                                         });
                                     } else {
-                                        res.json("User token already exist");
+                                         res.json({
+                                            success: false,
+                                            msg: "User token already exist"
+                                        });
                                         return;
+                                       // res.json("User token already exist");
+                                        //return;
                                     }
                                 });
-                            });
+                             
                         }
                     }).catch(function(error) {
-                        res.send("User registration failed");
+                         res.json({
+                            success: false,
+                            msg: "User registration failed"
+                        });
                         return;
+                       // res.send("User registration failed");
+                        //return;
                     })
                 } else {
                     res.json({
@@ -157,6 +185,7 @@ router.post('/login', function(req, res, next) {
     User.findOne({
         'email': email.toLowerCase()
     }).then(function(userData) {
+        
         if (userData != null) {
             if(bcrypt.compareSync(req.body.password, userData.password)){
                 if (deviceToken!=undefined) {
@@ -219,18 +248,32 @@ router.post('/login', function(req, res, next) {
                                 if (deviceToken != undefined) {
                                     
                                     var updatedUserData = _.merge(userData, userData);
-
-                                    updatedUserData.save(function(err, data) {
-                                        // console.log("deviceToken@loginByEmail->"+data);
-                                    })
+                                   
+                                    // updatedUserData.save(function(err, data) {
+                                    //     // console.log("deviceToken@loginByEmail->"+data);
+                                    // })
                                 } 
                                 //------------------
-                                // if (userData.photo != null) {
-                                //     if (userData.photo.length) {
-                                //         var picture = CONSTANTS.baseUrl + getImage + userData.photo;
-                                //         userData.photo = picture;
-                                //     }
-                                // }
+                                 if (userData.photo) {
+                                    
+                                    if (userData.photo != null && userData.photo != "" && userData.photo != undefined) {
+                                        var picture = CONSTANTS.baseUrl + getImage + userData.photo;
+                                        userData.photo = picture;
+                                    }
+                                }
+                                    
+                                if (userData.unit_system==""||userData.unit_system=="Imperial") {
+                                   
+                                    if(userData.height!=""&&userData.height!=undefined&&userData.height!=null){
+                                        converted_height = userData.height * 0.3937;
+                                        userData.height = converted_height.toFixed(2);
+                                    }        
+                                    if(userData.weight!=""&&userData.weight!=undefined&&userData.weight!=null){
+                                        converted_weight = userData.weight * 2.2046;
+                                        userData.weight = converted_weight.toFixed(2);
+                                    }
+                                };
+                                
                                 
                                 var userGeneratedToken = {
                                     'userId': info.userId,
@@ -239,14 +282,39 @@ router.post('/login', function(req, res, next) {
                                     'is_online': data.is_online,
                                     'latitude': data.latitude,
                                     'longitude': data.longitude,
-                                    'login_type': data.login_type
-                                    // 'photo': userData.photo
+                                    'login_type': data.login_type,
+                                    'stripe_customer_id'  :userData.stripe_customer_id,
+                                    'is_upgrade': userData.is_upgrade,
+                                    'fullname' : userData.fullname,
+                                    'gender' : userData.gender,
+                                    'about_user' : userData.about_user,
+                                    'distance_setting' : userData.distance_setting,
+                                    'show_ethnicity' : userData.show_ethnicity,
+                                    'interest' : userData.interest,
+                                    'rating' : userData.rating,
+                                    'age' : userData.age,
+                                    'date_of_birth' : userData.date_of_birth,
+                                    'show_age' : userData.show_age,
+                                    'show_searching_for' : userData.show_searching_for,
+                                    'show_relationship_status' : userData.show_relationship_status,
+                                    'height':userData.height,
+                                    'weight':userData.weight,
+                                    'unit_system':userData.unit_system,
+                                    'ethnicity':userData.ethnicity,
+                                    'relationship_status':userData.relationship_status,
+                                    'photo' : userData.photo
                                 };
-                                
+                                                               
                                 
                                 if (error) {
-                                    res.send("Failed to save token");
+                                    res.json({
+                                        success: false,
+                                        msg: "Failed to save token"
+                                    });
+                                    return;
+                                    //res.send("Failed to save token");
                                 } else {
+                                	
                                     res.json({
                                         success: true,
                                         msg: "Login successfully",
@@ -265,19 +333,36 @@ router.post('/login', function(req, res, next) {
                             } 
                             //------------------
 
-                            // if (userInfo.userId.photo != null) {
-                            //     if (userInfo.userId.photo.length) {
-                            //         var picture = CONSTANTS.baseUrl + getImage + userInfo.userId.photo;
-                            //         userInfo.userId.photo = picture;
-                            //     }
-                            // }
+                         
                             
                             var userUpdatedToken = {
                                 'userId': userInfo.userId._id,
                                 'token': userInfo.token,
                                 'email': userInfo.userId.email,
-                                'is_online': data.is_online
+                                'is_online': data.is_online,
+                                'stripe_customer_id'  :data.stripe_customer_id,
+                                'is_upgrade' : data.is_upgrade,
+                                'fullname' : data.fullname,
+                                'gender' : data.gender,
+                                'about_user' : data.about_user,
+                                'distance_setting' : data.distance_setting,
+                                'show_ethnicity' : data.show_ethnicity,
+                                'interest' : data.interest,
+                                'rating' : data.rating,
+                                'age' : data.age,
+                                'date_of_birth' : data.date_of_birth,
+                                'show_age' : data.show_age,
+                                'show_searching_for' : data.show_searching_for,
+                                'show_relationship_status' : data.show_relationship_status,
+                                'height':data.height,
+                                'weight':data.weight,
+                                'unit_system':data.unit_system,
+                                'ethnicity':data.ethnicity,
+                                'relationship_status':data.relationship_status,
+                                'photo' : data.photo,
+                                'login_type' : data.login_type
                             };
+                          
                             res.json({
                                 success: true,
                                 msg: "Login successfully",
@@ -301,7 +386,7 @@ router.post('/login', function(req, res, next) {
             });
             return;
         }
-    })
+    }).catch(function(error){ console.log(error,"login error"); })
 });
 
 /*
@@ -310,187 +395,225 @@ router.post('/login', function(req, res, next) {
  * created on - 9th Nov 2017;
  */
 router.post('/socialSignup', function(req, res, next) {
-    console.log(req.body)
+    // console.log(req.body)
     var facebookId = req.body.facebookId;
     var email = req.body.email;
     var fullname = req.body.fullName;
     var gender = req.body.gender;//newly added
-    // var device = deviceType = req.body.deviceType;
     var device = deviceType = "ANDROID";
-    // var deviceToken = req.body.deviceToken;
     var deviceToken = "qaz123wsx456rfv789";
 
-    if (email != null && email != '' ) {
-        User.findOne({
-            'email': email
-        }).then(function(userData) {
-            if (userData) {
-                res.json({
-                    'success': false,
-                    'msg': "Email id is already exist"
-                })
-            } else {
-                //-------------------------------------
-                var deviceData={};
-                deviceData.device_type = deviceType;
-                deviceData.device_token = deviceToken;
-                //-------------------------------------    
-                if (facebookId != null) {
-                    User.findOne({
-                        'facebookId': facebookId
-                    }).then(function(userData) {
+    User.findOne({
+        $and: [{
+            'email': email.toLowerCase()
+        }, {
+            'facebookId': req.body.facebookId
+        }]
+    }).then(function(userData) {
+        
+        // console.log(userData)
+        // return
+        var deviceData={};
+        deviceData.device_type = deviceType;
+        deviceData.device_token = deviceToken;
+
+        if (userData!= null && userData != '') {
+            // Login
+
+            var tokenData = {
+                username: userData.email,
+                timestamp: config.currentTimestamp,
+                id: userData._id
+            };
+
+            //var secret = new Buffer(config.secret, "base64").toString();
+            var generatedToken = jwt.sign(tokenData, config.secret);
+
+            Token.findOne({
+                userId: userData._id
+            }).then(function(userInfo) {
+
+                if (userInfo == null) {
+                    
+                    var newToken = new Token({
+                        userId: userData._id,
+                        token: generatedToken,
+                        deviceType: "ANDROID"
+                    });
+            
+                    newToken.save(function(error, info) {
                         
-                        // User.findOneAndUpdate({
-                        //         _id: userData._id
-                        //     }, {
-                        //         $set: {
-                        //             'login_type': "facebook_login",
-                        //             'is_online': true                                }
-                        //     }, {
-                        //         'new': true
-                        //     }, function(err, data) {
-                        //     // console.log("updated->"+data);
-                        // });
+                        if (error) {
+                            console.log(error)
+                            res.json({
+                                success: false,
+                                msg: "Failed to add token"
+                            })
+                        } else {
+                           
+                            
+                            var userGeneratedToken = {
+                                    'userId': userData.userId,
+                                    'token': userData.token,
+                                    'email': userData.email,
+                                    'is_online': userData.is_online,
+                                    'latitude': userData.latitude,
+                                    'longitude': userData.longitude,
+                                    'login_type': userData.login_type,
+                                    'stripe_customer_id'  :userData.stripe_customer_id,
+                                    'is_upgrade': userData.is_upgrade,
+                                    'fullname' : userData.fullname,
+                                    'gender' : userData.gender,
+                                    'about_user' : userData.about_user,
+                                    'distance_setting' : userData.distance_setting,
+                                    'show_ethnicity' : userData.show_ethnicity,
+                                    'interest' : userData.interest,
+                                    'rating' : userData.rating,
+                                    'age' : userData.age,
+                                    'date_of_birth' : userData.date_of_birth,
+                                    'show_age' : userData.show_age,
+                                    'show_searching_for' : userData.show_searching_for,
+                                    'show_relationship_status' : userData.show_relationship_status,
+                                    'height':userData.height,
+                                    'weight':userData.weight,
+                                    'unit_system':userData.unit_system,
+                                    'ethnicity':userData.ethnicity,
+                                    'relationship_status':userData.relationship_status,
+                                    'photo' : userData.photo,
+                                    'facebookId': userData.facebookId,
+                                    'login_type': "facebook",
+                                    'token': info.token
+                                };
+
+                            res.json({
+                                success: true,
+                                msg: "User login successfully with facebookId",
+                                data: userGeneratedToken
+                            });
+                            return;
+                        }
+                    });
+
+                } else {
+                    
+                     res.json({
+                    'success': false,
+                    'msg': "user token already exist"
+                });
+                return;
+                }
+            });
+
+        } else {
+            
+            //SignUp
+
+            var user = new User({
+                'fullname': fullname,
+                'email': email.toLowerCase(),
+                'facebookId': req.body.facebookId,
+                'gender': req.body.gender,
+                'login_type': "facebook",
+                'is_online': true
+            });
+            //------------
+            //save device tokens in user table
+            user.deviceTokens = [];
+            user.deviceTokens.push(deviceData);
+            //--------------
+            user.save(function(err, data) {
+                if (data) {
+                    var tokenData = {
+                        username: data.email,
+                        timestamp: config.currentTimestamp,
+                        id: data._id
+                    };
+                    //var secret = new Buffer(config.secret, "base64").toString();
+                    var generatedToken = jwt.sign(tokenData, config.secret);
+                    
+                    Token.findOne({
+                        userId: data._id
+                    }).then(function(userInfo) {
                         
-                        if (userData) {
-                            var tokenData = {
-                                username: userData.email,
-                                timestamp: config.currentTimestamp,
-                                id: userData._id
-                            };
-                            //var secret = new Buffer(config.secret, "base64").toString();
-                            var generatedToken = jwt.sign(tokenData, config.secret);
+                        if (userInfo == null) {
+                            var newToken = new Token({
+                                userId: data._id,
+                                token: generatedToken,
+                                deviceType: "ANDROID"
+                            });
                             
-                            Token.findOneAndUpdate({
-                                _id: userData._id
-                            }, {
-                                $set: {
-                                    token: generatedToken,
-                                    updatedAt: config.currentTimestamp
-                                }
-                            }, {
-                                'new': true
-                            }).exec().then(function(updatedToken) {
+                            newToken.save(function(error, info) {
                                 
-                                // if (userData.photo != null) {
-                                //     if (userData.photo.length) {
-                                //         var picture = CONSTANTS.baseUrl + getImage + userData.photo;
-                                //         userData.photo = picture;
-                                //     }
-                                // }
-                                var userUpdatedToken = {
-                                    'userId': updatedToken.userId,
-                                    'token': updatedToken.token,
-                                    'fullName': userData.fullname,
-                                    'email': userData.email,
-                                    // 'phoneNumber': userData.phoneNumber,
-                                    'gender': userData.gender,//new field
-                                    // 'photo': userData.photo
+                                if (error) {
+                                    res.json({
+                                        success: false,
+                                        msg: "Failed to add token"
+                                    })
+                                } else {
+                                   
+                                     var userGeneratedToken = {
+                                    'userId': data.userId,
+                                    'token': data.token,
+                                    'email': data.email,
+                                    'is_online': data.is_online,
+                                    'latitude': data.latitude,
+                                    'longitude': data.longitude,
+                                    'login_type': data.login_type,
+                                    'stripe_customer_id'  :data.stripe_customer_id,
+                                    'is_upgrade': data.is_upgrade,
+                                    'fullname' : data.fullname,
+                                    'gender' : data.gender,
+                                    'about_user' : data.about_user,
+                                    'distance_setting' : data.distance_setting,
+                                    'show_ethnicity' : data.show_ethnicity,
+                                    'interest' : data.interest,
+                                    'rating' : data.rating,
+                                    'age' : data.age,
+                                    'date_of_birth' : data.date_of_birth,
+                                    'show_age' : data.show_age,
+                                    'show_searching_for' : data.show_searching_for,
+                                    'show_relationship_status' : data.show_relationship_status,
+                                    'height':data.height,
+                                    'weight':data.weight,
+                                    'unit_system':data.unit_system,
+                                    'ethnicity':data.ethnicity,
+                                    'relationship_status':data.relationship_status,
+                                    'photo' : data.photo,
+                                    'facebookId': data.facebookId,
+                                    'login_type': "facebook",
+                                    'token': info.token
                                 };
-                                if (updatedToken) {
-                                    // console.log(userUpdatedToken);
+                                    console.log("=>>",userGeneratedToken)
                                     res.json({
                                         success: true,
-                                        msg: "Token updated successfully",
-                                        data: userUpdatedToken
+                                        msg: 'User created successfully with facebookId.',
+                                        data: userGeneratedToken
                                     });
                                     return;
-                                } else {
-                                    res.send("something went wrong");
                                 }
-                            }).catch(function(error) {
-                                console.log(error);
-                            })
+                            });
                         } else {
-                            
-                            var user = new User({
-                                'fullname': fullname,
-                                'email': email.toLowerCase(),
-                                'facebookId': req.body.facebookId,
-                                'gender': req.body.gender,
-                                'is_online': true
+                            res.json({
+                                'success': false,
+                                'msg': "user token already exist"
                             });
-                            //------------
-                            //save device tokens in user table
-                            user.deviceTokens = [];
-                            user.deviceTokens.push(deviceData);
-                            //--------------
-                            user.save(function(err, data) {
-                                if (data) {
-                                    var tokenData = {
-                                        username: data.email,
-                                        timestamp: config.currentTimestamp,
-                                        id: data._id
-                                    };
-                                    //var secret = new Buffer(config.secret, "base64").toString();
-                                    var generatedToken = jwt.sign(tokenData, config.secret);
-                                    
-                                    Token.findOne({
-                                        userId: data._id
-                                    }).then(function(userInfo) {
-                                        
-                                        if (userInfo == null) {
-                                            var newToken = new Token({
-                                                userId: data._id,
-                                                token: generatedToken,
-                                                deviceType: "ANDROID"
-                                            });
-                                            
-                                            newToken.save(function(error, info) {
-                                                
-                                                if (error) {
-                                                    res.json({
-                                                        success: false,
-                                                        msg: "Failed to add token"
-                                                    })
-                                                } else {
-                                                    var createdUser = {
-                                                        'userId': data._id,
-                                                        'fullName': data.fullname,
-                                                        'email': data.email,
-                                                        'facebookId': data.facebookId,
-                                                        'gender': data.gender,
-                                                        'token': info.token
-                                                    };
-                                                    res.json({
-                                                        success: true,
-                                                        msg: 'User created successfully with facebookId.',
-                                                        data: createdUser
-                                                    });
-                                                    return;
-                                                }
-                                            });
-                                        } else {
-                                            res.json("user token already exist");
-                                        }
-                                    });
-                                } else {
-                                    console.log(err);
-                                    res.json({
-                                        'success': false,
-                                        'msg': "User signup failed through facebookId"
-                                    });
-                                    return;
-                                }
-                            })
+                            return;
+                            
                         }
-                    })
+                    });
                 } else {
+                    console.log(err);
                     res.json({
                         'success': false,
-                        'msg': "Please enter facebookId and email"
+                        'msg': "User signup failed through facebookId"
                     });
                     return;
                 }
-            }
-        })
-    }else{
-        res.json({
-            'success': false,
-            'msg': "Please enter email id"
-        });
-        return;
-    }
+            })
+
+        }
+    })
+
 })
 
 /*
@@ -539,16 +662,14 @@ router.post('/socialLogin', function(req, res, next) {
                             _id: userData._id
                         }, {
                             $set: {
-                                'login_type': "facebook_login",
-                                'is_online': true
+                                'login_type': "facebook"                                
                             }
                         }, {
                             'new': true
                         }, function(err, data1) {
-                            // console.log("updated->"+data1);
-
+                           
                         if (userInfo) {
-                            // if (userInfo.userId.photo.length) {
+                            // if (userInfo.userId.distance_setting.length) {
                             //     if (userInfo.userId.photo != null || userInfo.userId.photo != "") {
                             //         var picture = CONSTANTS.baseUrl + getImage + userInfo.userId.photo;
                             //         userInfo.userId.photo = picture;
@@ -570,6 +691,54 @@ router.post('/socialLogin', function(req, res, next) {
                             })
                             //------------
 
+                            if (userData.photo) {
+                                    if (userData.photo != null && userData.photo != "" && userData.photo != undefined) {
+                                        var picture = CONSTANTS.baseUrl + getImage + userData.photo;
+                                        userData.photo = picture;
+                                    }
+                                }
+                                    
+                                if (userData.unit_system==""||userData.unit_system=="Imperial") {
+                                    console.log("Imperial")
+                                    if(userData.height!=""&&userData.height!=undefined&&userData.height!=null){
+                                        converted_height = userData.height * 0.3937;
+                                        userData.height = converted_height.toFixed(2);
+                                    }        
+                                    if(userData.weight!=""&&userData.weight!=undefined&&userData.weight!=null){
+                                        converted_weight = userData.weight * 2.2046;
+                                        userData.weight = converted_weight.toFixed(2);
+                                    }
+                                };
+                                var userGeneratedToken = {
+                                    'userId': userData.userId,
+                                    'token': userData.token,
+                                    'email': userData.email,
+                                    'is_online': userData.is_online,
+                                    'latitude': userData.latitude,
+                                    'longitude': userData.longitude,
+                                    'login_type': userData.login_type,
+                                    'stripe_customer_id'  :userData.stripe_customer_id,
+                                    'is_upgrade': userData.is_upgrade,
+                                    'fullname' : userData.fullname,
+                                    'gender' : userData.gender,
+                                    'about_user' : userData.about_user,
+                                    'distance_setting' : userData.distance_setting,
+                                    'show_ethnicity' : userData.show_ethnicity,
+                                    'interest' : userData.interest,
+                                    'rating' : userData.rating,
+                                    'age' : userData.age,
+                                    'date_of_birth' : userData.date_of_birth,
+                                    'show_age' : userData.show_age,
+                                    'show_searching_for' : userData.show_searching_for,
+                                    'show_relationship_status' : userData.show_relationship_status,
+                                    'height':userData.height,
+                                    'weight':userData.weight,
+                                    'unit_system':userData.unit_system,
+                                    'ethnicity':userData.ethnicity,
+                                    'relationship_status':userData.relationship_status,
+                                    'photo' : userData.photo,
+
+                                };
                             res.json({
                                 success: true,
                                 msg: "User login successfully with facebookId",
@@ -577,11 +746,84 @@ router.post('/socialLogin', function(req, res, next) {
                             });
                             return;
                         } else {
-                            res.json({
-                                'success': false,
-                                'msg': "User does not have token"
+                             var tokenData = {
+                                username: userData.email,
+                                timestamp: config.currentTimestamp,
+                                id: userData._id
+                            };
+                            var generatedToken = jwt.sign(tokenData, config.secret);
+                            var newToken = new Token({
+                                userId: userData._id,
+                                token: generatedToken,
+                                deviceType: device
                             });
-                            return;
+                            newToken.save(function(error, info) {
+                               if (userData.photo) {
+                                    if (userData.photo != null && userData.photo != "" && userData.photo != undefined) {
+                                        var picture = CONSTANTS.baseUrl + getImage + userData.photo;
+                                        userData.photo = picture;
+                                    }
+                                }
+                                    
+                                if (userData.unit_system==""||userData.unit_system=="Imperial") {
+                                    console.log("Imperial")
+                                    if(userData.height!=""&&userData.height!=undefined&&userData.height!=null){
+                                        converted_height = userData.height * 0.3937;
+                                        userData.height = converted_height.toFixed(2);
+                                    }        
+                                    if(userData.weight!=""&&userData.weight!=undefined&&userData.weight!=null){
+                                        converted_weight = userData.weight * 2.2046;
+                                        userData.weight = converted_weight.toFixed(2);
+                                    }
+                                };
+                                var userGeneratedToken = {
+                                    'userId': info.userId,
+                                    'token': info.token,
+                                    'email': userData.email,
+                                    'is_online': data1.is_online,
+                                    'latitude': data1.latitude,
+                                    'longitude': data1.longitude,
+                                    'login_type': data1.login_type,
+                                    'stripe_customer_id'  :userData.stripe_customer_id,
+                                    'is_upgrade': userData.is_upgrade,
+                                    'fullname' : userData.fullname,
+                                    'gender' : userData.gender,
+                                    'about_user' : userData.about_user,
+                                    'distance_setting' : userData.distance_setting,
+                                    'show_ethnicity' : userData.show_ethnicity,
+                                    'interest' : userData.interest,
+                                    'rating' : userData.rating,
+                                    'age' : userData.age,
+                                    'date_of_birth' : userData.date_of_birth,
+                                    'show_age' : userData.show_age,
+                                    'show_searching_for' : userData.show_searching_for,
+                                    'show_relationship_status' : userData.show_relationship_status,
+                                    'height':userData.height,
+                                    'weight':userData.weight,
+                                    'unit_system':userData.unit_system,
+                                    'ethnicity':userData.ethnicity,
+                                    'relationship_status':userData.relationship_status,
+                                    'photo' : userData.photo
+                                };
+                                
+                                
+                                if (error) {
+                                    res.json({
+                                        success: false,
+                                        msg: "Failed to save token"
+                                    });
+                                    return;
+                                    //res.send("Failed to save token");
+                                } else {
+                                    res.json({
+                                        success: true,
+                                        msg: "Login successfully",
+                                        data: userGeneratedToken
+                                    });
+                                    return;
+                                }
+                            })
+                         
                         }
                     });
                 }).catch(function(error) {
@@ -614,6 +856,7 @@ router.post('/logout', function(req, res, next) {
     User.findOne({
         '_id': userId
     }).then(function(userData) {
+        console.log(userData);
         if (userData != null) {
             //--------------
             if (Device_Token!=undefined && Device_Token!=null && Device_Token!="") {
@@ -634,7 +877,6 @@ router.post('/logout', function(req, res, next) {
                             var deviceData={};
                             deviceData.device_type = userData.deviceTokens.deviceType;
                             deviceData.device_token = userData.deviceTokens.deviceToken; 
-
                             userData.deviceTokens.push(deviceData);
                         }
                     });
@@ -646,7 +888,7 @@ router.post('/logout', function(req, res, next) {
             }).then(function(userTokenInfo) {
 
                 if (Device_Token!=undefined && Device_Token!=null && Device_Token!="") {
-                
+                    
                     var logOutData = _.merge(userData, userData);
                     logOutData.save(function(err, data) {
                         // console.log("logOutData"+data);
@@ -664,19 +906,19 @@ router.post('/logout', function(req, res, next) {
                         }, function(err, data1) {
                             // console.log("updated->"+data);
 
-                    if (userTokenInfo != null) {
+                    // if (userTokenInfo != null) {
                         res.json({
                             'success': true,
                             'msg': "User logout successfully",
                             'data' : data1
                         })
-                    } else {
-                        res.json({
-                            'success': false,
-                            'msg': "User dont have token"
-                        });
-                        return;
-                    }
+                    // } else {
+                    //     res.json({
+                    //         'success': false,
+                    //         'msg': "User dont have token"
+                    //     });
+                    //     return;
+                    // }
                 });
             }).catch(function(error) {
                 res.json({
@@ -712,7 +954,29 @@ router.post('/delete_account', function(req,res,next) {
         User.findOneAndRemove({
             '_id':req.body.userId
         }).then(function(deleted_data) {
+
+            var userImage = deleted_data.photo;
+
+            if (userImage != '') {
+                if (fs.existsSync('./public/uploads/users/' + userImage)) {
+                    //Delete hospital_logo from folder
+                    fs.unlink('./public/uploads/users/' + userImage);
+                    // console.log("deleted")
+                }
+            }
+
+            var text = 'Hey There \n\n'+
+                                       email_msgs.delete_account.delete_body;
+            var subject = email_msgs.delete_account.delete_title;
+            
+            config.sendMail(deleted_data.email.toLowerCase(), text, subject).then(function(error,result) {
+                if (error) {
+                    console.log(error);
+                }
+            });
             if (deleted_data) {
+
+
                 Token.findOneAndRemove({
                     'userId': req.body.userId
                 }).then(function(userTokenInfo) {
@@ -731,8 +995,8 @@ router.post('/delete_account', function(req,res,next) {
                     }
                 }).catch(function(error) {
                     res.json({
-                        success:false,
-                        msg:'unable to remove token'
+                            success:true,
+                            msg:'User account successfully deleted'
                     });
                     return;
                 })
@@ -753,7 +1017,8 @@ router.post('/delete_account', function(req,res,next) {
     }).catch(function(error) {
         res.json({
             success:false,
-            msg:"Authentication failed"
+            msg:"Authentication failed",
+            authStatus  :1
         });
         return;
     })
@@ -765,13 +1030,16 @@ router.post('/delete_account', function(req,res,next) {
  * created on - 14th Nov 2017;
  */
 router.post('/forgetPassword', function(req, res, next) {
-    var email = req.body.email;
+    var email = req.body.email.toLowerCase();
+    // console.log(email)
     var randomPassword;
     User.findOne({
         'email': email.toLowerCase()
     }).then(function(userData) {
+        // console.log("=>",userData)
         if (userData) {
-            randomPassword = randomString.generate(6);
+            randomPassword = randomString.generate(8);
+            // randomPassword = "qaz123wsx";
             // randomPassword = Math.floor(1000 + Math.random() * 9000);
             // console.log("randomPassword=>" + randomPassword);
             User.findOneAndUpdate({
@@ -786,15 +1054,26 @@ router.post('/forgetPassword', function(req, res, next) {
             }, {
                 'new': true
             }).then(function(updatedUserData) {
+        
+                // console.log("=>",updatedUserData)
+        
                 if (updatedUserData) {
+
                     var text = 'You are receiving this because you ' +
                         'have requested reset of ' +
                         'password for your account.\n\n Your new password' +
                         ' is ' + randomPassword;
                     var subject = 'Password Reset Notification';
-                    config.sendMail(req.body.email.toLowerCase(), text, subject).then(function(result, error) {
+
+                    // config.sendMail(req.body.email.toLowerCase(), text, subject).then(function(result, error) {
+                    mailFunction.sendMail(subject, text, email,function(error,result) {
                         if (error) {
                             console.log(error);
+                            res.json({
+                            success: false,
+                            msg: 'Something went wrong, password reset failed'
+                        });
+                        return;
                         }
                         res.json({
                             success: true,
@@ -803,8 +1082,16 @@ router.post('/forgetPassword', function(req, res, next) {
                         });
                         return;
                     });
+                   
+                }else{
+                    res.json({
+                        success: false,
+                        msg: 'Something went wrong, password reset failed'
+                    });
+                    return;
                 }
             }).catch(function(error) {
+                console.log(error)
                 res.json({
                     success: false,
                     msg: 'Something went wrong, password reset failed'
@@ -819,6 +1106,7 @@ router.post('/forgetPassword', function(req, res, next) {
             return;
         }
     }).catch(function(error) {
+        console.log(error)
         res.json({
             success: false,
             msg: 'Please enter valid mail id'
@@ -836,9 +1124,9 @@ router.post('/changePassword', function(req, res, next) {
     var password = req.body.newPassword;
     var newPassword = req.body.confirmNewPassword;
     var userId = req.body.userId;
-    // var phoneNumber = req.body.phoneNumber;
+    var password = req.body.password;
 
-    if (!req.body.newPassword || !req.body.confirmNewPassword || req.body.newPassword == undefined || req.body.confirmNewPassword == undefined) {
+    if (!password || !req.body.newPassword || !req.body.confirmNewPassword || req.body.newPassword == undefined || req.body.confirmNewPassword == undefined) {
         res.json({
             success: false,
             msg: 'Please enter new password or confirm new password'
@@ -850,19 +1138,21 @@ router.post('/changePassword', function(req, res, next) {
             msg: 'New password and confirm new password should be same'
         })
     }
-    // if (email) {
+    
         User.findOne({
             '_id': userId
         }).exec().then(function(userData) {
-            // console.log(userData);
+            
+            if (bcrypt.compareSync(password, userData.password)) {
+            
             var hash_password = bcrypt.hashSync(newPassword, salt);
             if (userData) {
                     User.findOneAndUpdate({
                         _id: userData._id
                     }, {
                         $set: {
-                           // password: config.encrypt(newPassword),
-                           password: hash_password,
+                            // password: config.encrypt(newPassword),
+                            password: hash_password,
                             // oneTimePassword: false,
                             updatedAt: config.currentTimestamp
                         }
@@ -889,6 +1179,14 @@ router.post('/changePassword', function(req, res, next) {
                     msg: "User not found with user id"
                 })
             }
+        }
+        else
+        {
+            res.json({
+                success: false,
+                msg: "Please enter current password correctly"
+            });
+        }
         }).catch(function(error) {
             console.log(error);
             res.json({
@@ -897,7 +1195,6 @@ router.post('/changePassword', function(req, res, next) {
             });
         })
 })
-
 /*
  * Get User Information
  * created by - Aniket Meshram;
@@ -905,26 +1202,34 @@ router.post('/changePassword', function(req, res, next) {
  */
 router.post('/getUser', function(req, res, next) {
     var token = req.headers['accesstoken'];
+    console.log('in Function');
     jwtAuth.checkAuth(token).then(function(result) {
         var userId = req.body.userId;
+        
         User.findOne({
             '_id': userId
         }).then(function(userData) {
             if (userData) {
+        
                 if (userData.photo) {
                     if (userData.photo != null && userData.photo != "" && userData.photo != undefined) {
                         var picture = CONSTANTS.baseUrl + getImage + userData.photo;
                         userData.photo = picture;
                     }
                 }
-                if(userData.height!=""&&userData.height!=undefined&&userData.height!=null){
-                    converted_height = userData.height * 0.3937;
-                    userData.height = converted_height;
-                }
-                if(userData.weight!=""&&userData.weight!=undefined&&userData.weight!=null){
-                    converted_weight = userData.weight * 2.2046;
-                    userData.weight = converted_weight;
-                }
+                    
+                if (userData.unit_system==""||userData.unit_system=="Imperial") {
+                    console.log("Imperial")
+                    if(userData.height!=""&&userData.height!=undefined&&userData.height!=null){
+                        converted_height = userData.height * 0.3937;
+                        userData.height = converted_height.toFixed(2);
+                    }        
+                    if(userData.weight!=""&&userData.weight!=undefined&&userData.weight!=null){
+                        converted_weight = userData.weight * 2.2046;
+                        userData.weight = converted_weight.toFixed(2);
+                    }
+                };
+    
                 userData = userData.toObject();
                 delete userData.password;
                 res.json({
@@ -936,19 +1241,24 @@ router.post('/getUser', function(req, res, next) {
                 res.json({
                     success: false,
                     msg: "Failed to get user record"
-                })
+                });
+                return;
             }
         }).catch(function(error) {
+            console.log(error);
             res.json({
                 success: false,
                 msg: "Please enter valid userId"
-            })
+            });
+            return;
         })
     }).catch(function(error) {
         res.json({
             success: false,
-            msg: "Authentication failed"
+            msg: "Authentication failed",
+            authStatus  :1
         });
+        return;
     })
 })
 
@@ -960,7 +1270,8 @@ router.post('/getUser', function(req, res, next) {
 router.post('/editProfile', function(req, res, next) {
     var token = req.headers['accesstoken'];
     jwtAuth.checkAuth(token).then(function(result) {
-        // console.log(req.body)
+        console.log(req.body)
+    
         var userId = req.body.userId;
 
         var calculate_age = function(birth_month, birth_day, birth_year) {
@@ -979,24 +1290,56 @@ router.post('/editProfile', function(req, res, next) {
                 resolve(age);
             })
         }
-        if (req.body.dateOfBirth != null || req.body.dateOfBirth != undefined) {
-            var dob = req.body.dateOfBirth.split('T');
+        if (req.body.date_of_birth != null || req.body.date_of_birth != undefined) {
+            var dob = req.body.date_of_birth.split('T');
             var splitDob = dob[0].split('-');
             calculate_age(splitDob[1], splitDob[2], splitDob[0]).then(function(userCalculateAge) {
                 var userAge = userCalculateAge;
-                req.body.age = userAge;
+                req.body.age = parseInt(userAge);
             });
         }
 
+        if (req.body.email != req.body.confirmemail) {
+            res.json({
+                success: false,
+                msg: 'New email and confirm new email should be same'
+            })
+        }
+        console.log(userId);
         User.findOne({
             '_id': userId
         }).then(function(userInfo) {
-            // console.log("->"+userInfo);
+            console.log("data from db",userInfo);
             if (userInfo) {
+
+                filter_setting = {};
+                filter_setting.looking_for = req.body.looking_for;
+                
+                req.body.filter_setting = filter_setting;
+                
+                if(req.body.height && userInfo.unit_system=='Imperial'){
+                    var height = req.body.height.split("'");                  
+                    let centimeter=0;
+                    if(height[0]){
+                       centimeter = height[0] * 30.48;
+                    }
+                    if(height[1]){
+                        centimeter+=height[1] * 2.54;
+                    }                    
+                    req.body.height = centimeter;
+                }
+                if(req.body.weight && userInfo.unit_system=='Imperial'){
+                    req.body.weight = req.body.weight * 0.453592;
+                }
+
+
+               
                 var updatedUser = _.extend(userInfo, req.body);
+                // _.extend(userInfo, req.body);
                 // delete updatedUser.password;
+                // console.log("merge data",updatedUser)
                 updatedUser.save(function(err, output) {
-                    // console.log("->"+output);
+                     console.log("saved data",output);
                     if (err) {
                         res.json({
                             success: false,
@@ -1004,9 +1347,27 @@ router.post('/editProfile', function(req, res, next) {
                         });
                         return;
                     } else {
+
+                        if (output.unit_system==""||output.unit_system=="Imperial") {
+                            //console.log("Imperial")
+                            if(output.height!=""&&output.height!=undefined&&output.height!=null){
+                                converted_height = req.body.height;
+                                output.height = converted_height.toFixed(2);
+                            }        
+                            if(output.weight!=""&&output.weight!=undefined&&output.weight!=null){
+                                converted_weight = req.body.weight;
+                                output.weight = converted_weight.toFixed(2);
+                            }
+                        };
+                          if (output.photo) {                                    
+                                    if (output.photo != null && output.photo != "" && output.photo != undefined) {
+                                        var picture = CONSTANTS.baseUrl + getImage + output.photo;
+                                        output.photo = picture;
+                                    }
+                                }
+                               
                         output = output.toObject();
                         delete output.password;
-
                         res.json({
                             success: true,
                             msg: "User profile updated successfully",
@@ -1023,13 +1384,18 @@ router.post('/editProfile', function(req, res, next) {
                     return;
                 })
             } else {
-                res.send("user not found with thos userId");
+                res.json({
+                        success: false,
+                        msg: "user not found with thos userId"
+                });
+                return;                
             }
         })
     }).catch(function(error) {
         res.json({
             success: false,
-            msg: "Authentication failed"
+            msg: "Authentication failed",
+            authStatus  :1
         });
         return;
     })
@@ -1073,10 +1439,15 @@ router.post('/add_photo', fileUpload.uploadImage('photo', userImage), function(r
                 }, {
                     'new': true
                 }, function(err, data) {
-                    if (data.photo != null && data.photo != "" && data.photo != undefined) {
-                        var picture = CONSTANTS.baseUrl + getImage + data.photo;
-                        data.photo = picture;
-                    }
+                   
+                       if (data.photo) {
+                                    
+                                    if (data.photo != null && data.photo != "" && data.photo != undefined) {
+                                        var picture = CONSTANTS.baseUrl + getImage + data.photo;
+                                        data.photo = picture;
+                                    }
+                                }
+                                console.log(data.photo)
                     if (err) {
                         res.json({
                             success:false,
@@ -1109,10 +1480,11 @@ router.post('/add_photo', fileUpload.uploadImage('photo', userImage), function(r
     }).catch(function(error) {
         res.json({
             success:false,
-            msg:"Authentication failed"
+            msg:"Authentication failed",
+            authStatus  :1
         });
         return;
     })
 })
 
-module.exports = router;
\ No newline at end of file
+module.exports = router;
